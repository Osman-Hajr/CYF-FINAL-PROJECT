[{"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/index.js":"1","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/App.js":"2","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/FooterComponent/Footer.js":"3","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/StudentMainPage.js":"4","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/use-auth.js":"5","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/HTML-CSS/HTML_CSS.jsx":"6","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/JavaScript/JavaScript.jsx":"7","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/Git-GitHub/Git_Github.jsx":"8","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/NodeJS/NodeJS.jsx":"9","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/PostgreSQL/PostgreSQL.jsx":"10","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/REACTJS/REACTJS.jsx":"11","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/index.js":"12","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/StudentModulesBody.js":"13","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/useLocalstorage.js":"14","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/StudentSideBar.jsx":"15","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/useFetch.js":"16","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/UI/Spinner.js":"17","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/PrivateRouth.js":"18","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/RegisterPage.js":"19","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/HomePage.js":"20","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/HeaderComponent/Header.js":"21","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/RegisterForm.js":"22","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/HeroImage/HeroImage.js":"23","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/LoginForm.js":"24","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/HeaderComponent/Logo.js":"25","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/MentorPages/MentorRegion/MentorRegionPage.jsx":"26","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/MentorPages/MentorClassesPage/MentorClassesPage.jsx":"27"},{"size":236,"mtime":1609978850309,"results":"28","hashOfConfig":"29"},{"size":2319,"mtime":1610464494254,"results":"30","hashOfConfig":"29"},{"size":590,"mtime":1609978850309,"results":"31","hashOfConfig":"29"},{"size":485,"mtime":1610130845907,"results":"32","hashOfConfig":"29"},{"size":2763,"mtime":1610399110613,"results":"33","hashOfConfig":"29"},{"size":3595,"mtime":1610399265555,"results":"34","hashOfConfig":"29"},{"size":3920,"mtime":1610399110613,"results":"35","hashOfConfig":"29"},{"size":3595,"mtime":1610450538537,"results":"36","hashOfConfig":"29"},{"size":3570,"mtime":1610399110617,"results":"37","hashOfConfig":"29"},{"size":3563,"mtime":1610399110617,"results":"38","hashOfConfig":"29"},{"size":3525,"mtime":1610445825943,"results":"39","hashOfConfig":"29"},{"size":359,"mtime":1610032446278,"results":"40","hashOfConfig":"29"},{"size":1637,"mtime":1610305503095,"results":"41","hashOfConfig":"29"},{"size":1302,"mtime":1609978850297,"results":"42","hashOfConfig":"29"},{"size":1127,"mtime":1609978850309,"results":"43","hashOfConfig":"29"},{"size":975,"mtime":1610452789667,"results":"44","hashOfConfig":"29"},{"size":296,"mtime":1609978850309,"results":"45","hashOfConfig":"29"},{"size":675,"mtime":1609978850309,"results":"46","hashOfConfig":"29"},{"size":608,"mtime":1610050940116,"results":"47","hashOfConfig":"29"},{"size":829,"mtime":1610305503091,"results":"48","hashOfConfig":"29"},{"size":1200,"mtime":1610309091298,"results":"49","hashOfConfig":"29"},{"size":4221,"mtime":1610305503091,"results":"50","hashOfConfig":"29"},{"size":383,"mtime":1609978850309,"results":"51","hashOfConfig":"29"},{"size":2506,"mtime":1610451596352,"results":"52","hashOfConfig":"29"},{"size":302,"mtime":1609978850309,"results":"53","hashOfConfig":"29"},{"size":1364,"mtime":1610463575008,"results":"54","hashOfConfig":"29"},{"size":1164,"mtime":1610469929451,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1985891",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/index.js",[],["118","119"],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/App.js",["120"],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/FooterComponent/Footer.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/StudentMainPage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/use-auth.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/HTML-CSS/HTML_CSS.jsx",["121","122","123","124"],"\n\nimport React, { useState,useEffect} from \"react\";\n\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport { Table, Button} from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./HTML_CSS.scss\";\nimport {Demo, getAverage} from \"../JavaScript/JavaScript\"\nimport { useAuth } from \"../../../../Auth/use-auth\";\n\n\nexport default function HTML_CSS() {\n  let { status, data, error } = useFetch(\n    \"http://localhost:3001/api/Modules/HTML_CSS/Topics\"\n  );\n  console.log(data);\n  const auth = useAuth();\n\n  const [grade,setGrade] = useState({})\n \n \n \n  let { status:gradeStatus, data:gradeData, error:gradeError } = useFetch(\n   `http://localhost:3001/api/Modules/Users/${auth.user.id}/GetGrade`\n );\n \n useEffect(() => {\n  if(!gradeData || !data){\n     return \n  }\n  let topicId = data.map(x=>x.topic_id)\n \n  let tempGradeData = {}\n  gradeData.forEach((item)=>{\n    if(topicId.includes(item.topic_id)){\n     tempGradeData[item.topic_id]=item.vote;\n    }\n    \n  })\n setGrade(tempGradeData);\n  \n }, [gradeData,data])\n \n \n console.log(gradeData);\n \n\n  if (status === \"error\") {\n    return <div>Error: {error.message}</div>;\n  } else if (status === \"success\") {\n    return <HtmlTopicList data={data}  gradeData = {grade} />;\n  } else {\n    return <Spinner />;\n  }\n}\n\nconst HtmlTopicList = ({ data ,gradeData }) => {\n  \n\n  console.log(\"this the data\", data);\n  const tableHeaders = [20, 40, 60, 80, 100];\n  const auth = useAuth()\n  const [state, setState] = useState({\n    task: { options: tableHeaders, extras: data },\n    selected: gradeData,\n  });\n  const onRadioChange = (e) => {\n    console.log(e.currentTarget);\n    let name = e.currentTarget.id;\n    let value = e.currentTarget.value;\n    setState({\n      ...state,\n      selected: { ...state.selected, [name]: value },\n    });\n  };\n\n  useEffect(()=>{\n    setState({...state,selected:gradeData})\n  },[gradeData])\n\n\n  const onSubmit = () => {\n    // convert TO array\n    const results = [];\n    for (const [key, value] of Object.entries(state.selected)) {\n      results.push({\n        topic_id: key,\n        vote: value,\n      });\n    }\n    fetch(`http://localhost:3001/api/users/${auth.user.id}/add-grade`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${JSON.parse(\n          window.localStorage.getItem(\"token\")\n        )}`,\n      },\n      body: JSON.stringify(results),\n    });\n  };\n  let columns = [];\n  columns.push({\n    title: \"HTML-CSS Topics\",\n    dataIndex: \"name\",\n    key: \"name\",\n    width: \"45vw\",\n  });\n  state.task.options.forEach((option, i) => {\n    columns.push({\n      title: option,\n      key: option,\n      render: (row) => {\n        return (\n          <input\n            type=\"radio\"\n            checked={state.selected[row.id] == option}\n            onChange={onRadioChange}\n            name={row.name}\n            id={row.id}\n            value={option}\n          />\n        );\n      },\n    });\n  });\n  let rowHeaders = [];\n  state.task.extras.forEach((extra, i) => {\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\n  });\n  return (\n    <div>\n      <Table\n        columns={columns}\n        dataSource={rowHeaders}\n        size=\"middle\"\n        bordered\n        pagination={false}\n      />\n      {/* <Tag color=\"red\">Selected options</Tag> */}\n      {/* <br />\n      {JSON.stringify(state.selected)}\n      <br /> */}\n      <Button onClick={onSubmit} type=\"primary\">\n        {\" \"}\n        Submit\n      </Button>\n      <Demo newAddingValue={getAverage(state.selected)}/>\n    </div>\n  );\n};","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/JavaScript/JavaScript.jsx",["125","126","127","128"],"import React, { useState,useEffect} from \"react\";\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport { Table, Button } from \"antd\";\nimport { Progress } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport \"./JavaScript.scss\";\nimport { useAuth } from \"../../../../Auth/use-auth\";\n\n\n\nexport default function JavaScript() {\n  let { status, data, error } = useFetch(\n    \"http://localhost:3001/api/Modules/JavaScript/Topics\"\n  );\n  console.log(data);\n const auth = useAuth();\n\n const [grade,setGrade] = useState({})\n\n\n\n let { status:gradeStatus, data:gradeData, error:gradeError } = useFetch(\n  `http://localhost:3001/api/Modules/Users/${auth.user.id}/GetGrade`\n);\n\nuseEffect(() => {\n if(!gradeData || !data){\n    return \n }\n let topicId = data.map(x=>x.topic_id)\n\n let tempGradeData = {}\n gradeData.forEach((item)=>{\n   if(topicId.includes(item.topic_id)){\n    tempGradeData[item.topic_id]=item.vote;\n   }\n   \n })\nsetGrade(tempGradeData);\n \n}, [gradeData,data])\n\n\nconsole.log(gradeData);\n\n  if (status === \"error\") {\n    return <div>Error: {error.message}</div>;\n  } else if (status === \"success\") {\n    return <JavaScriptTopicList data={data} gradeData = {grade}/>;\n  } else {\n    return <Spinner />;\n  }\n}\n\nexport const getAverage = (valuesObject) =>{\n  return parseInt(Object.values(valuesObject).reduce((accumulator,currentValue)=>accumulator+parseInt(currentValue),0)/Object.values(valuesObject).length)\n}\n\n\nexport const Demo =({newAddingValue}) =>{\n\n  return (\n    <div>\n       <Progress\n      strokeColor={{\n        from: '#d12f2f',\n        to: '#87d068',\n      }}\n      percent={newAddingValue}\n      status=\"active\"\n    />\n    </div>\n  )\n}\n\n\nconst JavaScriptTopicList = ({ data,gradeData }) => {\n  const tableHeaders = [20, 40, 60, 80, 100];\n  const auth = useAuth()\n  const [state, setState] = useState({\n    task: { options: tableHeaders, extras: data },\n    selected: gradeData,\n  });\n  const onRadioChange = (e) => {\n    let name = e.currentTarget.id;\n    let value = e.currentTarget.value;\n    setState({\n      ...state,\n      selected: { ...state.selected, [name]: value },\n    });\n  };\nconsole.log(state);\n\nuseEffect(()=>{\n  setState({...state,selected:gradeData})\n},[gradeData])\n  \n\n  const onSubmit = () => {\n    // convert TO array\n    const results = [];\n    for (const [key, value] of Object.entries(state.selected)) {\n      results.push({\n        topic_id: key,\n        vote: value,\n      });\n    }\n    fetch(`http://localhost:3001/api/users/${auth.user.id}/add-grade`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${JSON.parse(\n          window.localStorage.getItem(\"token\")\n        )}`,\n      },\n      body: JSON.stringify(results),\n    });\n  };\n  let columns = [];\n  columns.push({\n    title: \"JavaScript Topics\",\n    dataIndex: \"name\",\n    key: \"name\",\n    width: \"45vw\",\n  });\n  state.task.options.forEach((option, i) => {\n    columns.push({\n      title: option,\n      key: option,\n      render: (row) => {\n        return (\n          <input\n            type=\"radio\"\n            checked={state.selected[row.id] == option}\n            onChange={onRadioChange}\n            name={row.name}\n            id={row.id}\n            value={option}\n          />\n        );\n      },\n    });\n  });\n  let rowHeaders = [];\n  state.task.extras.forEach((extra, i) => {\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\n  });\n  return (\n    <div>\n      <h1>JavaScript</h1>\n      <Table\n        columns={columns}\n        dataSource={rowHeaders}\n        size=\"middle\"\n        bordered\n        pagination={false}\n      />\n      <br />\n      {JSON.stringify(state.selected)}\n      <br />\n      <Button onClick={onSubmit} type=\"primary\" id=\"submitBtn\">\n        {\" \"}\n        Submit\n      </Button>\n     <Demo  newAddingValue = {getAverage(state.selected)}/>\n    </div>\n  );\n};\n","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/Git-GitHub/Git_Github.jsx",["129","130","131","132"],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/NodeJS/NodeJS.jsx",["133","134","135","136","137"],"import React , {useState,useEffect} from 'react';\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport {Table, Button, Tag} from 'antd'\nimport 'antd/dist/antd.css'\nimport \"./NodeJS.scss\";\nimport {Demo, getAverage} from \"../JavaScript/JavaScript\"\nimport { useAuth } from \"../../../../Auth/use-auth\";\n\n\n\n\n\nexport default function NodeJS() {\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/NodeJS/Topics');\n  console.log(data);\n  const auth = useAuth();\n\n  const [grade,setGrade] = useState({})\n \n \n \n  let { status:gradeStatus, data:gradeData, error:gradeError } = useFetch(\n   `http://localhost:3001/api/Modules/Users/${auth.user.id}/GetGrade`\n );\n \n useEffect(() => {\n  if(!gradeData || !data){\n     return \n  }\n  let topicId = data.map(x=>x.topic_id)\n \n  let tempGradeData = {}\n  gradeData.forEach((item)=>{\n    if(topicId.includes(item.topic_id)){\n     tempGradeData[item.topic_id]=item.vote;\n    }\n    \n  })\n setGrade(tempGradeData);\n  \n }, [gradeData,data])\n \n \n console.log(gradeData);\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <NodeJsTopicList data={data} gradeData = {grade} />;\n  } else {\n    return <Spinner />;\n  }\n\n}\n\n\nconst NodeJsTopicList = ({ data ,gradeData }) => {\n  console.log(\"this the data\", data);\n  const tableHeaders = [20, 40, 60, 80, 100];\n  const auth = useAuth()\n  const [state, setState] = useState({\n    task: { options: tableHeaders, extras: data },\n    selected: gradeData,\n  });\n  const onRadioChange = (e) => {\n    console.log(e.currentTarget);\n    let name = e.currentTarget.id;\n    let value = e.currentTarget.value;\n    setState({\n      ...state,\n      selected: { ...state.selected, [name]: value },\n    });\n  };\n\n  useEffect(()=>{\n    setState({...state,selected:gradeData})\n  },[gradeData])\n\n  const onSubmit = () => {\n    // convert TO array\n    const results = [];\n    for (const [key, value] of Object.entries(state.selected)) {\n      results.push({\n        topic_id: key,\n        vote: value,\n      });\n    }\n    fetch(`http://localhost:3001/api/users/${auth.user.id}/add-grade`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${JSON.parse(\n          window.localStorage.getItem(\"token\")\n        )}`,\n      },\n      body: JSON.stringify(results),\n    });\n  };\n  let columns = [];\n  columns.push({\n    title: \"NodeJS Topics\",\n    dataIndex: \"name\",\n    key: \"name\",\n    width: \"25vw\",\n  });\n  state.task.options.forEach((option, i) => {\n    columns.push({\n      title: option,\n      key: option,\n      render: (row) => {\n        return (\n          <input\n            type=\"radio\"\n            checked={state.selected[row.id] == option}\n            onChange={onRadioChange}\n            name={row.name}\n            id={row.id}\n            value={option}\n          />\n        );\n      },\n    });\n  });\n  let rowHeaders = [];\n  state.task.extras.forEach((extra, i) => {\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\n  });\n  return (\n    <div>\n      <Table\n        columns={columns}\n        dataSource={rowHeaders}\n        size=\"middle\"\n        bordered\n        pagination={false}\n      />\n      {/* <Tag color=\"red\">Selected options</Tag> */}\n      <br />\n      {JSON.stringify(state.selected)}\n      <br />\n      <Button onClick={onSubmit} type=\"primary\">\n        {\" \"}\n        Submit\n      </Button>\n      <Demo newAddingValue={getAverage(state.selected)}/>\n    </div>\n  );\n};","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/PostgreSQL/PostgreSQL.jsx",["138","139","140","141"],"import React , {useState,useEffect} from 'react';\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport {Table, Button} from 'antd'\nimport 'antd/dist/antd.css'\nimport \"./PostgreSQL.scss\";\nimport {Demo, getAverage} from \"../JavaScript/JavaScript\"\nimport { useAuth } from \"../../../../Auth/use-auth\";\n\n\nexport default function PostgreSQL() {\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/PostgreSQL/Topics');\n\n  console.log(data);\n  const auth = useAuth();\n\n  const [grade,setGrade] = useState({})\n \n \n \n  let { status:gradeStatus, data:gradeData, error:gradeError } = useFetch(\n   `http://localhost:3001/api/Modules/Users/${auth.user.id}/GetGrade`\n );\n \n useEffect(() => {\n  if(!gradeData || !data){\n     return \n  }\n  let topicId = data.map(x=>x.topic_id)\n \n  let tempGradeData = {}\n  gradeData.forEach((item)=>{\n    if(topicId.includes(item.topic_id)){\n     tempGradeData[item.topic_id]=item.vote;\n    }\n    \n  })\n setGrade(tempGradeData);\n  \n }, [gradeData,data])\n \n \n console.log(gradeData);\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <PostgreSqlTopicList data={data} gradeData = {grade}/>;\n  } else {\n    return <Spinner />;\n  }\n\n}\n\n\nconst PostgreSqlTopicList = ({ data,gradeData  }) => {\n\n  //console.log(\"this the data\", data);\n  const tableHeaders = [20, 40, 60, 80, 100];\n  const auth = useAuth()\n  const [state, setState] = useState({\n    task: { options: tableHeaders, extras: data },\n    selected: gradeData ,\n  });\n  const onRadioChange = (e) => {\n    \n    let name = e.currentTarget.id;\n    let value = e.currentTarget.value;\n    setState({\n      ...state,\n      selected: { ...state.selected, [name]: value },\n    });\n  };\n\n  useEffect(()=>{\n    setState({...state,selected:gradeData})\n  },[gradeData])\n\n  const onSubmit = () => {\n    // convert TO array\n    const results = [];\n    for (const [key, value] of Object.entries(state.selected)) {\n      results.push({\n        topic_id: key,\n        vote: value,\n      });\n    }\n    fetch(`http://localhost:3001/api/users/${auth.user.id}/add-grade`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${JSON.parse(\n          window.localStorage.getItem(\"token\")\n        )}`,\n      },\n      body: JSON.stringify(results),\n    });\n  };\n  let columns = [];\n  columns.push({\n    title: \"PostgreSQL Topics\",\n    dataIndex: \"name\",\n    key: \"name\",\n    width: \"45vw\",\n  });\n  state.task.options.forEach((option, i) => {\n    columns.push({\n      title: option,\n      key: option,\n      render: (row) => {\n        return (\n          <input\n            type=\"radio\"\n            checked={state.selected[row.id] == option}\n            onChange={onRadioChange}\n            name={row.name}\n            id={row.id}\n            value={option}\n          />\n        );\n      },\n    });\n  });\n  let rowHeaders = [];\n  state.task.extras.forEach((extra, i) => {\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\n  });\n  return (\n    <div>\n      <Table\n        columns={columns}\n        dataSource={rowHeaders}\n        size=\"middle\"\n        bordered\n        pagination={false}\n      />\n      {/* <Tag color=\"red\">Selected options</Tag> */}\n      <br />\n      {JSON.stringify(state.selected)}\n      <br />\n      <Button onClick={onSubmit} type=\"primary\">\n        {\" \"}\n        Submit\n      </Button>\n      <Demo newAddingValue={getAverage(state.selected)}/>\n    </div>\n  );\n};\n","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/REACTJS/REACTJS.jsx",["142","143","144","145"],"import React , {useState,useEffect} from 'react';\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport {Table, Button} from 'antd'\nimport 'antd/dist/antd.css'\nimport \"./REACTJS.scss\";\nimport {Demo, getAverage} from \"../JavaScript/JavaScript\"\nimport { useAuth } from \"../../../../Auth/use-auth\";\n\n\nexport default function ReactJs() {\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/ReactJs/Topics');\n  console.log(data);\n  const auth = useAuth();\n\n  const [grade,setGrade] = useState({})\n \n \n \n  let { status:gradeStatus, data:gradeData, error:gradeError } = useFetch(\n   `http://localhost:3001/api/Modules/Users/${auth.user.id}/GetGrade`\n );\n \n useEffect(() => {\n  if(!gradeData || !data){\n     return \n  }\n  let topicId = data.map(x=>x.topic_id)\n \n  let tempGradeData = {}\n  gradeData.forEach((item)=>{\n    if(topicId.includes(item.topic_id)){\n     tempGradeData[item.topic_id]=item.vote;\n    }\n    \n  })\n setGrade(tempGradeData);\n  \n }, [gradeData,data])\n \n \n console.log(gradeData);\n \n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <ReactJsTopicList data={data} gradeData = {grade}/>;\n  } else {\n    return <Spinner />;\n  }\n\n}\n\n\nconst ReactJsTopicList = ({ data,gradeData  }) => {\n\n  console.log(\"this the data\", data);\n  const tableHeaders = [20, 40, 60, 80, 100];\n  const auth = useAuth()\n  const [state, setState] = useState({\n    task: { options: tableHeaders, extras: data },\n    selected: gradeData ,\n  });\n  const onRadioChange = (e) => {\n    console.log(e.currentTarget);\n    let name = e.currentTarget.id;\n    let value = e.currentTarget.value;\n    setState({\n      ...state,\n      selected: { ...state.selected, [name]: value },\n    });\n  };\n\n  useEffect(()=>{\n    setState({...state,selected:gradeData})\n  },[gradeData])\n\n\n  const onSubmit = () => {\n    // convert TO array\n    const results = [];\n    for (const [key, value] of Object.entries(state.selected)) {\n      results.push({\n        topic_id: key,\n        vote: value,\n      });\n    }\n    fetch(`http://localhost:3001/api/users/${auth.user.id}/add-grade`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${JSON.parse(\n          window.localStorage.getItem(\"token\")\n        )}`,\n      },\n      body: JSON.stringify(results),\n    });\n  };\n  let columns = [];\n  columns.push({\n    title: \"ReactJs Topics\",\n    dataIndex: \"name\",\n    key: \"name\",\n    width: \"45vw\",\n  });\n  state.task.options.forEach((option, i) => {\n    columns.push({\n      title: option,\n      key: option,\n      render: (row) => {\n        return (\n          <input\n            type=\"radio\"\n            checked={state.selected[row.id] == option}\n            onChange={onRadioChange}\n            name={row.name}\n            id={row.id}\n            value={option}\n          />\n        );\n      },\n    });\n  });\n  let rowHeaders = [];\n  state.task.extras.forEach((extra, i) => {\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\n  });\n  return (\n    <div>\n      <Table\n        columns={columns}\n        dataSource={rowHeaders}\n        size=\"middle\"\n        bordered\n        pagination={false}\n      />\n     \n      <br />\n      {JSON.stringify(state.selected)}\n      <br />\n      <Button onClick={onSubmit} type=\"primary\">\n        {\" \"}\n        Submit\n      </Button>\n      <Demo newAddingValue={getAverage(state.selected)}/>\n    </div>\n  );\n};\n","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/index.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/StudentModulesBody.js",["146"],"import React,{useState} from 'react';\nimport {Route,Link} from 'react-router-dom';\nimport useFetch from '../../Auth/useFetch';\nimport Spinner from '../UI/Spinner';\nimport \"./StudentModulesBody.scss\";\n//import JavaScript from \"../../components/StudentComponents/Modules Components/JavaScript/JavaScript\";\n\n\n\n\nexport default function StudentModulesBody() {\n\n   let { status, data, error } = useFetch('http://localhost:3001/api/subjects');\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <SubjectList data={data} />;\n  } else {\n    return <Spinner />;\n  }\n\n}\n  \nconst SubjectList = ({ data }) => {\n  const [subjects, setSubjects] = useState(data);\n\n  \n\n  return (\n    <div>\n      \n      <h3>How to use your tracker page!</h3>\n      <p>Select your level of confidence with the buttons next to each statement. Choosing 'not confident' will colour the statement red. Choosing 'needs review' will colour the statement yellow. Finally, choosing 'feel confident' will colour the statement green. Red topics are those you don't understand well. Yellow still need work. Green are the ones you feel most confident with.</p>\n      <div className=\"row\">\n          {subjects.map(({ name }) => (\n            <div>\n              <div className=\"text-center modules\" key={name}>\n                <Link to={`/modules/${name}`}>\n                <h2 className=\"\">{name}</h2>\n                </Link>\n                \n            </div>\n             <Route path={`/modules/${name}`} component={name} />\n             </div>\n          ))\n          }\n      </div>\n     \n    </div>\n  );\n};\n","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/useLocalstorage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/StudentSideBar.jsx",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/useFetch.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/UI/Spinner.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/PrivateRouth.js",["147"],"import { Route, Redirect } from 'react-router-dom';\nimport { useAuth } from '../Auth/use-auth';\nimport Spinner from './UI/Spinner';\n\n// A wrapper for <Route> that redirects to the login\n// screen if user not yet authenticated.\nconst PrivateRoute = ({ children, ...rest }) => {\n  let auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        return auth.user ? (\n          children\n        ) : (\n          // <Redirect\n          //   to={{\n          //     pathname: '/',\n          //     state: { from: location },\n          //   }}\n          // />\n          <Spinner />\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/RegisterPage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/HomePage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/HeaderComponent/Header.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/RegisterForm.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/HeroImage/HeroImage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/LoginForm.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/HeaderComponent/Logo.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/MentorPages/MentorRegion/MentorRegionPage.jsx",["148","149","150"],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/MentorPages/MentorClassesPage/MentorClassesPage.jsx",["151"],{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","replacedBy":"155"},{"ruleId":"156","severity":1,"message":"157","line":45,"column":11,"nodeType":"158","endLine":45,"endColumn":24},{"ruleId":"159","severity":1,"message":"160","line":25,"column":16,"nodeType":"161","messageId":"162","endLine":25,"endColumn":27},{"ruleId":"159","severity":1,"message":"163","line":25,"column":51,"nodeType":"161","messageId":"162","endLine":25,"endColumn":61},{"ruleId":"164","severity":1,"message":"165","line":81,"column":5,"nodeType":"166","endLine":81,"endColumn":16,"suggestions":"167"},{"ruleId":"168","severity":1,"message":"169","line":119,"column":45,"nodeType":"170","messageId":"171","endLine":119,"endColumn":47},{"ruleId":"159","severity":1,"message":"160","line":23,"column":15,"nodeType":"161","messageId":"162","endLine":23,"endColumn":26},{"ruleId":"159","severity":1,"message":"163","line":23,"column":50,"nodeType":"161","messageId":"162","endLine":23,"endColumn":60},{"ruleId":"164","severity":1,"message":"165","line":97,"column":3,"nodeType":"166","endLine":97,"endColumn":14,"suggestions":"172"},{"ruleId":"168","severity":1,"message":"169","line":135,"column":45,"nodeType":"170","messageId":"171","endLine":135,"endColumn":47},{"ruleId":"159","severity":1,"message":"160","line":20,"column":16,"nodeType":"161","messageId":"162","endLine":20,"endColumn":27},{"ruleId":"159","severity":1,"message":"163","line":20,"column":51,"nodeType":"161","messageId":"162","endLine":20,"endColumn":61},{"ruleId":"164","severity":1,"message":"165","line":78,"column":5,"nodeType":"166","endLine":78,"endColumn":16,"suggestions":"173"},{"ruleId":"168","severity":1,"message":"169","line":117,"column":45,"nodeType":"170","messageId":"171","endLine":117,"endColumn":47},{"ruleId":"159","severity":1,"message":"174","line":4,"column":24,"nodeType":"161","messageId":"162","endLine":4,"endColumn":27},{"ruleId":"159","severity":1,"message":"160","line":23,"column":16,"nodeType":"161","messageId":"162","endLine":23,"endColumn":27},{"ruleId":"159","severity":1,"message":"163","line":23,"column":51,"nodeType":"161","messageId":"162","endLine":23,"endColumn":61},{"ruleId":"164","severity":1,"message":"165","line":77,"column":5,"nodeType":"166","endLine":77,"endColumn":16,"suggestions":"175"},{"ruleId":"168","severity":1,"message":"169","line":114,"column":45,"nodeType":"170","messageId":"171","endLine":114,"endColumn":47},{"ruleId":"159","severity":1,"message":"160","line":21,"column":16,"nodeType":"161","messageId":"162","endLine":21,"endColumn":27},{"ruleId":"159","severity":1,"message":"163","line":21,"column":51,"nodeType":"161","messageId":"162","endLine":21,"endColumn":61},{"ruleId":"164","severity":1,"message":"165","line":77,"column":5,"nodeType":"166","endLine":77,"endColumn":16,"suggestions":"176"},{"ruleId":"168","severity":1,"message":"169","line":114,"column":45,"nodeType":"170","messageId":"171","endLine":114,"endColumn":47},{"ruleId":"159","severity":1,"message":"160","line":20,"column":16,"nodeType":"161","messageId":"162","endLine":20,"endColumn":27},{"ruleId":"159","severity":1,"message":"163","line":20,"column":51,"nodeType":"161","messageId":"162","endLine":20,"endColumn":61},{"ruleId":"164","severity":1,"message":"165","line":76,"column":5,"nodeType":"166","endLine":76,"endColumn":16,"suggestions":"177"},{"ruleId":"168","severity":1,"message":"169","line":114,"column":45,"nodeType":"170","messageId":"171","endLine":114,"endColumn":47},{"ruleId":"159","severity":1,"message":"178","line":26,"column":20,"nodeType":"161","messageId":"162","endLine":26,"endColumn":31},{"ruleId":"159","severity":1,"message":"179","line":1,"column":17,"nodeType":"161","messageId":"162","endLine":1,"endColumn":25},{"ruleId":"159","severity":1,"message":"180","line":4,"column":10,"nodeType":"161","messageId":"162","endLine":4,"endColumn":14},{"ruleId":"159","severity":1,"message":"181","line":4,"column":16,"nodeType":"161","messageId":"162","endLine":4,"endColumn":21},{"ruleId":"159","severity":1,"message":"182","line":21,"column":19,"nodeType":"161","messageId":"162","endLine":21,"endColumn":29},{"ruleId":"159","severity":1,"message":"183","line":19,"column":19,"nodeType":"161","messageId":"162","endLine":19,"endColumn":29},"no-native-reassign",["184"],"no-negated-in-lhs",["185"],"react/jsx-pascal-case","Imported JSX component Git_GitHub must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'gradeStatus' is assigned a value but never used.","Identifier","unusedVar","'gradeError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'state'. Either include it or remove the dependency array. You can also do a functional update 'setState(s => ...)' if you only need 'state' in the 'setState' call.","ArrayExpression",["186"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["187"],["188"],"'Tag' is defined but never used.",["189"],["190"],["191"],"'setSubjects' is assigned a value but never used.","'Redirect' is defined but never used.","'Link' is defined but never used.","'Route' is defined but never used.","'setRegions' is assigned a value but never used.","'setClasses' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"192","fix":"193"},{"desc":"192","fix":"194"},{"desc":"192","fix":"195"},{"desc":"192","fix":"196"},{"desc":"192","fix":"197"},{"desc":"192","fix":"198"},"Update the dependencies array to be: [gradeData, state]",{"range":"199","text":"200"},{"range":"201","text":"200"},{"range":"202","text":"200"},{"range":"203","text":"200"},{"range":"204","text":"200"},{"range":"205","text":"200"},[1886,1897],"[gradeData, state]",[2225,2236],[1869,1880],[1872,1883],[1860,1871],[1872,1883]]