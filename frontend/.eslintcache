[{"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/index.js":"1","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/App.js":"2","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/use-auth.js":"3","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/FooterComponent/Footer.js":"4","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/StudentMainPage.js":"5","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/HTML-CSS/HTML_CSS.jsx":"6","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/Git-GitHub/Git_Github.jsx":"7","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/JavaScript/JavaScript.jsx":"8","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/PostgreSQL/PostgreSQL.jsx":"9","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/NodeJS/NodeJS.jsx":"10","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/REACTJS/REACTJS.jsx":"11","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/index.js":"12","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/useLocalstorage.js":"13","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/StudentModulesBody.js":"14","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/StudentSideBar.jsx":"15","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/useFetch.js":"16","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/UI/Spinner.js":"17","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/PrivateRouth.js":"18","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/HomePage.js":"19","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/RegisterPage.js":"20","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/HeaderComponent/Header.js":"21","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/LoginForm.js":"22","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/RegisterForm.js":"23","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/HeaderComponent/Logo.js":"24","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/HeroImage/HeroImage.js":"25"},{"size":236,"mtime":1609978850309,"results":"26","hashOfConfig":"27"},{"size":1965,"mtime":1610062218323,"results":"28","hashOfConfig":"27"},{"size":2724,"mtime":1609978850297,"results":"29","hashOfConfig":"27"},{"size":590,"mtime":1609978850309,"results":"30","hashOfConfig":"27"},{"size":485,"mtime":1610130845907,"results":"31","hashOfConfig":"27"},{"size":3730,"mtime":1610121321206,"results":"32","hashOfConfig":"27"},{"size":3624,"mtime":1610280717952,"results":"33","hashOfConfig":"27"},{"size":3127,"mtime":1610140245695,"results":"34","hashOfConfig":"27"},{"size":3139,"mtime":1610108315134,"results":"35","hashOfConfig":"27"},{"size":3125,"mtime":1610108401205,"results":"36","hashOfConfig":"27"},{"size":3192,"mtime":1610280304238,"results":"37","hashOfConfig":"27"},{"size":359,"mtime":1610032446278,"results":"38","hashOfConfig":"27"},{"size":1302,"mtime":1609978850297,"results":"39","hashOfConfig":"27"},{"size":1849,"mtime":1610130305808,"results":"40","hashOfConfig":"27"},{"size":1127,"mtime":1609978850309,"results":"41","hashOfConfig":"27"},{"size":975,"mtime":1609978850297,"results":"42","hashOfConfig":"27"},{"size":296,"mtime":1609978850309,"results":"43","hashOfConfig":"27"},{"size":675,"mtime":1609978850309,"results":"44","hashOfConfig":"27"},{"size":819,"mtime":1610050940116,"results":"45","hashOfConfig":"27"},{"size":608,"mtime":1610050940116,"results":"46","hashOfConfig":"27"},{"size":1175,"mtime":1609978850309,"results":"47","hashOfConfig":"27"},{"size":2406,"mtime":1610050940116,"results":"48","hashOfConfig":"27"},{"size":4216,"mtime":1610050940116,"results":"49","hashOfConfig":"27"},{"size":302,"mtime":1609978850309,"results":"50","hashOfConfig":"27"},{"size":383,"mtime":1609978850309,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1985891",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/index.js",[],["110","111"],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/App.js",["112","113"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport {Class, Header, PrivateRoute, Home, RegisterPage } from \"./components\";\nimport StudentMainPage from './Pages/StudentPages/StudentMainPage'\nimport { ProvideAuth } from \"../src/Auth/use-auth\";\nimport Footer from \"./components/FooterComponent/Footer\";\nimport JavaScript from \"./components/StudentComponents/Modules Components/JavaScript/JavaScript\";\nimport HTML_CSS from \"./components/StudentComponents/Modules Components/HTML-CSS/HTML_CSS\";\nimport Git_GitHub from \"./components/StudentComponents/Modules Components/Git-GitHub/Git_Github\";\n\nimport NodeJS from \"./components/StudentComponents/Modules Components/NodeJS/NodeJS\";\nimport PostgreSQL from \"./components/StudentComponents/Modules Components/PostgreSQL/PostgreSQL\";\nimport REACTJS from \"./components/StudentComponents/Modules Components/REACTJS/REACTJS\";\n\n\n\n\nfunction App({match}) {\n\treturn (\n\t\t\n\t\t<Router>\n\t\t\t<ProvideAuth>\n\t\t\t\t<Header />\n\n\t\t\t\t<Container>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n              <Home />\n              \n\t\t\t\t\t\t</Route>\n            <Route exact path=\"/register\">\n              <RegisterPage />\n              \n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<PrivateRoute path=\"/student_main\">\n\t\t\t\t\t\t\t<StudentMainPage />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/JavaScript\">\n\t\t\t\t\t\t<JavaScript />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/HTML_CSS\">\n\t\t\t\t\t\t<HTML_CSS />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/Git_GitHub\">\n\t\t\t\t\t\t<Git_GitHub/>\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/NodeJS\">\n\t\t\t\t\t\t<NodeJS />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/PostgreSQL\">\n\t\t\t\t\t\t<PostgreSQL />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/ReactJS\">\n\t\t\t\t\t\t<REACTJS/>\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Container>\n\t\t\t\t<Footer />\n\t\t\t</ProvideAuth>\n\t\t</Router>\n\t);\n}\n\nexport default App;","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/use-auth.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/FooterComponent/Footer.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/StudentMainPage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/HTML-CSS/HTML_CSS.jsx",["114","115"],"\nimport React , {useState} from 'react';\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport {Table, Button, Tag} from 'antd'\nimport 'antd/dist/antd.css'\nimport \"./HTML_CSS.scss\";\n//import { ReactDOM } from 'react-dom';\n\nexport default function HTML_CSS() {\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/HTML_CSS/Topics');\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <HtmlTopicList data={data} />;\n  } else {\n    return <Spinner />;\n  }\n\n}\n\n\nconst HtmlTopicList = ({data})=> {\n  \n    const tableHeaders = [\"Very Unconfident\", \"Unconfident\", \"Somewhat Confident\", \"Confident\", \"Very Confident\"]\n    \n    const [state, setState] = useState({\n        task: { options: tableHeaders,\n         extras: data},\n        selected: {}\n      }\n      )\n      const handleSubmit = (e) => {\n        e.preventDefault()\n      }\n      const onRadioChange = e => {\n        let name = e.currentTarget.name;\n        let value = e.currentTarget.value;\n        setState({\n          ...state,\n          selected: { ...state.selected, [name]: value }\n        });\n      };\n      const onSubmit = () => {\n        \n        setState({\n          ...state,\n          selected: {}\n        });\n      };\n        let columns = [];\n        columns.push({\n          title: \"Topics\",\n          dataIndex: \"name\",\n          key: \"name\",\n          width: \"45vw\"\n        });\n        state.task.options.forEach((option, i) => {\n          columns.push({\n            title: option,\n            key: option,\n            render: row => {\n              return (\n                <input\n                  type=\"radio\"\n                  checked={state.selected[row.name] == option}\n                  onChange={onRadioChange}\n                  name={row.name}\n                  value={option}\n                  key={option}\n                  className = {ChooseColor(option)}\n                />\n              );\n            }\n          });\n        });\n        let rowHeaders = [];\n        state.task.extras.forEach((extra, i) => {\n          rowHeaders.push({ name: `${i + 1}.${extra.name}` });\n        });\n        return (\n          <div>\n            <div>\n                <h1>HTML & CSS</h1>\n            </div>\n            <Table\n              columns={columns}\n              dataSource={rowHeaders}\n              size=\"middle\"\n              bordered\n              pagination={false}\n            />\n            <Tag color=\"red\">Selected options</Tag>\n            <br />\n            {JSON.stringify(state.selected)}\n            <br />\n            <Button onClick={handleSubmit} type=\"primary\">\n              {\" \"}\n              Submit\n            </Button>\n          </div>\n        );\n}\nfunction ChooseColor(option) {\n  let className = \"\";\n  switch(option){\n    case 'Very Unconfident':\n    className= '#ff1a1a';\n    break;\n    case 'Unconfident':\n    className= '#ff8c1a';\n    break;\n    case 'Somewhat Confident':\n    className= '#ffff1a';\n    break;\n    case 'Confident':\n    className= '#c6ff1a';\n    break;\n    case 'Very Confident':\n    className= '#53ff1a';\n    break;\n    default:\n      className = \"\";\n  }\n  return className;\n}\n// const HtmlTopicList = ({ data }) => {\n//   const [topics, setTopics] = useState(data);\n//   console.log('this the data', data);\n//   return (\n//     <div>\n//       <div className=\"row\">\n//           {topics.map(({ name }) => (\n           \n//               <div className=\"text-center\" key={name}>\n               \n//                 <h2 className=\"\">{name}</h2>\n            \n//                 </div>\n//           ))\n//           }\n//       </div>\n     \n//     </div>\n//   )\n\n// }\n    ","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/Git-GitHub/Git_Github.jsx",["116"],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/JavaScript/JavaScript.jsx",["117"],"\nimport React , {useState} from 'react';\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport {Table, Button, Tag} from 'antd'\nimport 'antd/dist/antd.css'\n\n//import { ReactDOM } from 'react-dom';\n\nexport default function JavaScrip() {\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/Javascript/Topics');\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <JavascriptTopicList data={data} />;\n  } else {\n    return <Spinner />;\n  }\n\n}\n\n\nconst JavascriptTopicList = ({data})=> {\n  \n    const tableHeaders = [0,20,40,60,80,100]\n    \n    const [state, setState] = useState({\n        task: { options: tableHeaders,\n         extras: data},\n        selected: {}\n      }\n      )\n      const onRadioChange = e => {\n        let name = e.currentTarget.name;\n        let value = e.currentTarget.value;\n        setState({\n          ...state,\n          selected: { ...state.selected, [name]: value }\n        });\n      };\n      const onSubmit = (e) => {\n        e.preventDefault()\n        // console.log('on submit', state.selected);\n        // setState({\n        //   ...state,\n        //   selected: {}\n        // });\n      };\n        let columns = [];\n        columns.push({\n          title: \"Topics\",\n          dataIndex: \"name\",\n          key: \"name\",\n          width: \"45vw\"\n        });\n        state.task.options.forEach((option, i) => {\n          columns.push({\n            title: option,\n            key: option,\n            render: row => {\n              return (\n                <input\n                  type=\"radio\"\n                  checked={state.selected[row.name] == option}\n                  onChange={onRadioChange}\n                  name={row.name}\n                  value={option}\n                />\n              );\n            }\n          });\n        });\n        let rowHeaders = [];\n        state.task.extras.forEach((extra, i) => {\n          rowHeaders.push({ name: `${i + 1}.${extra.name}` });\n        });\n        return (\n          <div>\n            <div>\n                <h1>Javascript</h1>\n            </div>\n            <Table\n              columns={columns}\n              dataSource={rowHeaders}\n              size=\"middle\"\n              bordered\n              pagination={false}\n            />\n            <Tag color=\"red\">Selected options</Tag>\n            <br />\n            {JSON.stringify(state.selected)}\n            <br />\n            <Button onClick={onSubmit} type=\"primary\">\n              {\" \"}\n              Submit\n            </Button>\n          </div>\n        );\n}\n// const HtmlTopicList = ({ data }) => {\n//   const [topics, setTopics] = useState(data);\n//   console.log('this the data', data);\n//   return (\n//     <div>\n//       <div className=\"row\">\n//           {topics.map(({ name }) => (\n           \n//               <div className=\"text-center\" key={name}>\n               \n//                 <h2 className=\"\">{name}</h2>\n            \n//                 </div>\n//           ))\n//           }\n//       </div>\n     \n//     </div>\n//   )\n\n// }\n    ","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/PostgreSQL/PostgreSQL.jsx",["118"],"\nimport React , {useState} from 'react';\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport {Table, Button, Tag} from 'antd'\nimport 'antd/dist/antd.css'\n\n//import { ReactDOM } from 'react-dom';\n\nexport default function PostgreSQL() {\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/PostgreSQL/Topics');\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <PostgresTopicList data={data} />;\n  } else {\n    return <Spinner />;\n  }\n\n}\n\n\nconst PostgresTopicList = ({data})=> {\n  console.log('this the data', data);\n    const tableHeaders = [\"0%-20%\", \"20%-40%\", \"40%-60%\", \"60%-80%\", \"80%-100%\"]\n    \n    const [state, setState] = useState({\n        task: { options: tableHeaders,\n         extras: data},\n        selected: {}\n      }\n      )\n      const onRadioChange = e => {\n        let name = e.currentTarget.name;\n        let value = e.currentTarget.value;\n        setState({\n          ...state,\n          selected: { ...state.selected, [name]: value }\n        });\n      };\n      const onSubmit = () => {\n        console.log(state.selected);\n        setState({\n          ...state,\n          selected: {}\n        });\n      };\n        let columns = [];\n        columns.push({\n          title: \"Topics\",\n          dataIndex: \"name\",\n          key: \"name\",\n          width: \"45vw\"\n        });\n        state.task.options.forEach((option, i) => {\n          columns.push({\n            title: option,\n            key: option,\n            render: row => {\n              return (\n                <input\n                  type=\"radio\"\n                  checked={state.selected[row.name] == option}\n                  onChange={onRadioChange}\n                  name={row.name}\n                  value={option}\n                />\n              );\n            }\n          });\n        });\n        let rowHeaders = [];\n        state.task.extras.forEach((extra, i) => {\n          rowHeaders.push({ name: `${i + 1}.${extra.name}` });\n        });\n        return (\n          <div>\n            <div>\n                <h1>Database</h1>\n            </div>  \n            <Table\n              columns={columns}\n              dataSource={rowHeaders}\n              size=\"middle\"\n              bordered\n              pagination={false}\n            />\n            <Tag color=\"red\">Selected options</Tag>\n            <br />\n            {JSON.stringify(state.selected)}\n            <br />\n            <Button onClick={onSubmit} type=\"primary\">\n              {\" \"}\n              Submit\n            </Button>\n          </div>\n        );\n}\n// const HtmlTopicList = ({ data }) => {\n//   const [topics, setTopics] = useState(data);\n//   console.log('this the data', data);\n//   return (\n//     <div>\n//       <div className=\"row\">\n//           {topics.map(({ name }) => (\n           \n//               <div className=\"text-center\" key={name}>\n               \n//                 <h2 className=\"\">{name}</h2>\n            \n//                 </div>\n//           ))\n//           }\n//       </div>\n     \n//     </div>\n//   )\n\n// }\n    ","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/NodeJS/NodeJS.jsx",["119"],"\nimport React , {useState} from 'react';\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport {Table, Button, Tag} from 'antd'\nimport 'antd/dist/antd.css'\n\n//import { ReactDOM } from 'react-dom';\n\nexport default function NodeJS() {\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/NodeJS/Topics');\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <NodeJSTopicList data={data} />;\n  } else {\n    return <Spinner />;\n  }\n\n}\n\n\nconst NodeJSTopicList = ({data})=> {\n  console.log('this the data', data);\n    const tableHeaders = [\"0%-20%\", \"20%-40%\", \"40%-60%\", \"60%-80%\", \"80%-100%\"]\n    \n    const [state, setState] = useState({\n        task: { options: tableHeaders,\n         extras: data},\n        selected: {}\n      }\n      )\n      const onRadioChange = e => {\n        let name = e.currentTarget.name;\n        let value = e.currentTarget.value;\n        setState({\n          ...state,\n          selected: { ...state.selected, [name]: value }\n        });\n      };\n      const onSubmit = () => {\n        console.log(state.selected);\n        setState({\n          ...state,\n          selected: {}\n        });\n      };\n        let columns = [];\n        columns.push({\n          title: \"Topics\",\n          dataIndex: \"name\",\n          key: \"name\",\n          width: \"45vw\"\n        });\n        state.task.options.forEach((option, i) => {\n          columns.push({\n            title: option,\n            key: option,\n            render: row => {\n              return (\n                <input\n                  type=\"radio\"\n                  checked={state.selected[row.name] == option}\n                  onChange={onRadioChange}\n                  name={row.name}\n                  value={option}\n                />\n              );\n            }\n          });\n        });\n        let rowHeaders = [];\n        state.task.extras.forEach((extra, i) => {\n          rowHeaders.push({ name: `${i + 1}.${extra.name}` });\n        });\n        return (\n          <div>\n            <div>\n                <h1>Nodejs</h1>\n            </div>  \n            <Table\n              columns={columns}\n              dataSource={rowHeaders}\n              size=\"middle\"\n              bordered\n              pagination={false}\n            />\n            <Tag color=\"red\">Selected options</Tag>\n            <br />\n            {JSON.stringify(state.selected)}\n            <br />\n            <Button onClick={onSubmit} type=\"primary\">\n              {\" \"}\n              Submit\n            </Button>\n          </div>\n        );\n}\n// const HtmlTopicList = ({ data }) => {\n//   const [topics, setTopics] = useState(data);\n//   console.log('this the data', data);\n//   return (\n//     <div>\n//       <div className=\"row\">\n//           {topics.map(({ name }) => (\n           \n//               <div className=\"text-center\" key={name}>\n               \n//                 <h2 className=\"\">{name}</h2>\n            \n//                 </div>\n//           ))\n//           }\n//       </div>\n     \n//     </div>\n//   )\n\n// }\n    ","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/REACTJS/REACTJS.jsx",["120"],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/index.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/useLocalstorage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/StudentModulesBody.js",["121"],"import React,{useState} from 'react';\nimport {Route,Link} from 'react-router-dom';\nimport useFetch from '../../Auth/useFetch';\nimport Spinner from '../UI/Spinner';\nimport \"./StudentModulesBody.scss\";\n//import JavaScript from \"../../components/StudentComponents/Modules Components/JavaScript/JavaScript\";\n\n\n\n\nexport default function StudentModulesBody() {\n\n   let { status, data, error } = useFetch('http://localhost:3001/api/subjects');\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <SubjectList data={data} />;\n  } else {\n    return <Spinner />;\n  }\n\n}\n  \nconst SubjectList = ({ data }) => {\n  const [subjects, setSubjects] = useState(data);\n\n  \n\n  return (\n    <div>\n      \n      <h3>How to use your tracker page!</h3>\n      <p>Select your level of confidence with the buttons next to each statement. Choosing 'not confident' will colour the statement red. Choosing 'needs review' will colour the statement yellow. Finally, choosing 'feel confident' will colour the statement green. Red topics are those you don't understand well. Yellow still need work. Green are the ones you feel most confident with.</p>\n      <div className=\"row\">\n          {subjects.map(({ name }) => (\n            <div>\n              <div className=\"text-center modules\" key={name}>\n                <Link to={`/modules/${name}`}>\n                <h2 className=\"\">{name}</h2>\n                </Link>\n                \n            </div>\n             <Route path={`/modules/${name}`} component={name} />\n             </div>\n          ))\n          }\n      </div>\n     \n    </div>\n  );\n};\n\n\n\n//     return (\n//         <div className = \"modules\">\n//             <Link to= {`/modules/moduleName`}>\n//             <button>go to detail</button>\n//             </Link>\n//         </div>\n//     )\n// }\n// }","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/StudentSideBar.jsx",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/useFetch.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/UI/Spinner.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/PrivateRouth.js",["122"],"import { Route, Redirect } from 'react-router-dom';\nimport { useAuth } from '../Auth/use-auth';\nimport Spinner from './UI/Spinner';\n\n// A wrapper for <Route> that redirects to the login\n// screen if user not yet authenticated.\nconst PrivateRoute = ({ children, ...rest }) => {\n  let auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        return auth.user ? (\n          children\n        ) : (\n          // <Redirect\n          //   to={{\n          //     pathname: '/',\n          //     state: { from: location },\n          //   }}\n          // />\n          <Spinner />\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/HomePage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/RegisterPage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/HeaderComponent/Header.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/LoginForm.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/RegisterForm.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/HeaderComponent/Logo.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/HeroImage/HeroImage.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":3,"column":9,"nodeType":"129","messageId":"130","endLine":3,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":45,"column":7,"nodeType":"133","endLine":45,"endColumn":20},{"ruleId":"127","severity":1,"message":"134","line":45,"column":13,"nodeType":"129","messageId":"130","endLine":45,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":67,"column":53,"nodeType":"137","messageId":"138","endLine":67,"endColumn":55},{"ruleId":"127","severity":1,"message":"139","line":2,"column":17,"nodeType":"129","messageId":"130","endLine":2,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":65,"column":53,"nodeType":"137","messageId":"138","endLine":65,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":64,"column":53,"nodeType":"137","messageId":"138","endLine":64,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":64,"column":53,"nodeType":"137","messageId":"138","endLine":64,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":64,"column":53,"nodeType":"137","messageId":"138","endLine":64,"endColumn":55},{"ruleId":"127","severity":1,"message":"140","line":26,"column":20,"nodeType":"129","messageId":"130","endLine":26,"endColumn":31},{"ruleId":"127","severity":1,"message":"141","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'Class' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Git_GitHub must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'onSubmit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'setSubjects' is assigned a value but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]