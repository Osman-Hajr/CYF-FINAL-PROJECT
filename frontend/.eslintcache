<<<<<<< HEAD
[{"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/index.js":"1","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/App.js":"2","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/use-auth.js":"3","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/FooterComponent/Footer.js":"4","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/StudentMainPage.js":"5","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/HTML-CSS/HTML_CSS.jsx":"6","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/Git-GitHub/Git_Github.jsx":"7","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/JavaScript/JavaScript.jsx":"8","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/PostgreSQL/PostgreSQL.jsx":"9","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/NodeJS/NodeJS.jsx":"10","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/REACTJS/REACTJS.jsx":"11","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/index.js":"12","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/useLocalstorage.js":"13","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/StudentModulesBody.js":"14","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/StudentSideBar.jsx":"15","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/useFetch.js":"16","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/UI/Spinner.js":"17","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/PrivateRouth.js":"18","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/HomePage.js":"19","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/RegisterPage.js":"20","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/HeaderComponent/Header.js":"21","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/LoginForm.js":"22","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/RegisterForm.js":"23","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/HeaderComponent/Logo.js":"24","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/HeroImage/HeroImage.js":"25"},{"size":236,"mtime":1609978850309,"results":"26","hashOfConfig":"27"},{"size":1965,"mtime":1610062218323,"results":"28","hashOfConfig":"27"},{"size":2724,"mtime":1609978850297,"results":"29","hashOfConfig":"27"},{"size":590,"mtime":1609978850309,"results":"30","hashOfConfig":"27"},{"size":485,"mtime":1610130845907,"results":"31","hashOfConfig":"27"},{"size":3730,"mtime":1610121321206,"results":"32","hashOfConfig":"27"},{"size":3624,"mtime":1610280717952,"results":"33","hashOfConfig":"27"},{"size":3127,"mtime":1610140245695,"results":"34","hashOfConfig":"27"},{"size":3139,"mtime":1610108315134,"results":"35","hashOfConfig":"27"},{"size":3125,"mtime":1610108401205,"results":"36","hashOfConfig":"27"},{"size":3192,"mtime":1610280304238,"results":"37","hashOfConfig":"27"},{"size":359,"mtime":1610032446278,"results":"38","hashOfConfig":"27"},{"size":1302,"mtime":1609978850297,"results":"39","hashOfConfig":"27"},{"size":1849,"mtime":1610130305808,"results":"40","hashOfConfig":"27"},{"size":1127,"mtime":1609978850309,"results":"41","hashOfConfig":"27"},{"size":975,"mtime":1609978850297,"results":"42","hashOfConfig":"27"},{"size":296,"mtime":1609978850309,"results":"43","hashOfConfig":"27"},{"size":675,"mtime":1609978850309,"results":"44","hashOfConfig":"27"},{"size":819,"mtime":1610050940116,"results":"45","hashOfConfig":"27"},{"size":608,"mtime":1610050940116,"results":"46","hashOfConfig":"27"},{"size":1175,"mtime":1609978850309,"results":"47","hashOfConfig":"27"},{"size":2406,"mtime":1610050940116,"results":"48","hashOfConfig":"27"},{"size":4216,"mtime":1610050940116,"results":"49","hashOfConfig":"27"},{"size":302,"mtime":1609978850309,"results":"50","hashOfConfig":"27"},{"size":383,"mtime":1609978850309,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1985891",{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/index.js",[],["110","111"],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/App.js",["112","113"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Container from \"react-bootstrap/Container\";\nimport {Class, Header, PrivateRoute, Home, RegisterPage } from \"./components\";\nimport StudentMainPage from './Pages/StudentPages/StudentMainPage'\nimport { ProvideAuth } from \"../src/Auth/use-auth\";\nimport Footer from \"./components/FooterComponent/Footer\";\nimport JavaScript from \"./components/StudentComponents/Modules Components/JavaScript/JavaScript\";\nimport HTML_CSS from \"./components/StudentComponents/Modules Components/HTML-CSS/HTML_CSS\";\nimport Git_GitHub from \"./components/StudentComponents/Modules Components/Git-GitHub/Git_Github\";\n\nimport NodeJS from \"./components/StudentComponents/Modules Components/NodeJS/NodeJS\";\nimport PostgreSQL from \"./components/StudentComponents/Modules Components/PostgreSQL/PostgreSQL\";\nimport REACTJS from \"./components/StudentComponents/Modules Components/REACTJS/REACTJS\";\n\n\n\n\nfunction App({match}) {\n\treturn (\n\t\t\n\t\t<Router>\n\t\t\t<ProvideAuth>\n\t\t\t\t<Header />\n\n\t\t\t\t<Container>\n\t\t\t\t\t<Switch>\n\t\t\t\t\t\t<Route exact path=\"/\">\n              <Home />\n              \n\t\t\t\t\t\t</Route>\n            <Route exact path=\"/register\">\n              <RegisterPage />\n              \n\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t<PrivateRoute path=\"/student_main\">\n\t\t\t\t\t\t\t<StudentMainPage />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/JavaScript\">\n\t\t\t\t\t\t<JavaScript />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/HTML_CSS\">\n\t\t\t\t\t\t<HTML_CSS />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/Git_GitHub\">\n\t\t\t\t\t\t<Git_GitHub/>\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/NodeJS\">\n\t\t\t\t\t\t<NodeJS />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/PostgreSQL\">\n\t\t\t\t\t\t<PostgreSQL />\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/ReactJS\">\n\t\t\t\t\t\t<REACTJS/>\n\t\t\t\t\t\t</PrivateRoute>\n\t\t\t\t\t</Switch>\n\t\t\t\t</Container>\n\t\t\t\t<Footer />\n\t\t\t</ProvideAuth>\n\t\t</Router>\n\t);\n}\n\nexport default App;","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/use-auth.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/FooterComponent/Footer.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/StudentMainPage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/HTML-CSS/HTML_CSS.jsx",["114","115"],"\nimport React , {useState} from 'react';\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport {Table, Button, Tag} from 'antd'\nimport 'antd/dist/antd.css'\nimport \"./HTML_CSS.scss\";\n//import { ReactDOM } from 'react-dom';\n\nexport default function HTML_CSS() {\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/HTML_CSS/Topics');\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <HtmlTopicList data={data} />;\n  } else {\n    return <Spinner />;\n  }\n\n}\n\n\nconst HtmlTopicList = ({data})=> {\n  \n    const tableHeaders = [\"Very Unconfident\", \"Unconfident\", \"Somewhat Confident\", \"Confident\", \"Very Confident\"]\n    \n    const [state, setState] = useState({\n        task: { options: tableHeaders,\n         extras: data},\n        selected: {}\n      }\n      )\n      const handleSubmit = (e) => {\n        e.preventDefault()\n      }\n      const onRadioChange = e => {\n        let name = e.currentTarget.name;\n        let value = e.currentTarget.value;\n        setState({\n          ...state,\n          selected: { ...state.selected, [name]: value }\n        });\n      };\n      const onSubmit = () => {\n        \n        setState({\n          ...state,\n          selected: {}\n        });\n      };\n        let columns = [];\n        columns.push({\n          title: \"Topics\",\n          dataIndex: \"name\",\n          key: \"name\",\n          width: \"45vw\"\n        });\n        state.task.options.forEach((option, i) => {\n          columns.push({\n            title: option,\n            key: option,\n            render: row => {\n              return (\n                <input\n                  type=\"radio\"\n                  checked={state.selected[row.name] == option}\n                  onChange={onRadioChange}\n                  name={row.name}\n                  value={option}\n                  key={option}\n                  className = {ChooseColor(option)}\n                />\n              );\n            }\n          });\n        });\n        let rowHeaders = [];\n        state.task.extras.forEach((extra, i) => {\n          rowHeaders.push({ name: `${i + 1}.${extra.name}` });\n        });\n        return (\n          <div>\n            <div>\n                <h1>HTML & CSS</h1>\n            </div>\n            <Table\n              columns={columns}\n              dataSource={rowHeaders}\n              size=\"middle\"\n              bordered\n              pagination={false}\n            />\n            <Tag color=\"red\">Selected options</Tag>\n            <br />\n            {JSON.stringify(state.selected)}\n            <br />\n            <Button onClick={handleSubmit} type=\"primary\">\n              {\" \"}\n              Submit\n            </Button>\n          </div>\n        );\n}\nfunction ChooseColor(option) {\n  let className = \"\";\n  switch(option){\n    case 'Very Unconfident':\n    className= '#ff1a1a';\n    break;\n    case 'Unconfident':\n    className= '#ff8c1a';\n    break;\n    case 'Somewhat Confident':\n    className= '#ffff1a';\n    break;\n    case 'Confident':\n    className= '#c6ff1a';\n    break;\n    case 'Very Confident':\n    className= '#53ff1a';\n    break;\n    default:\n      className = \"\";\n  }\n  return className;\n}\n// const HtmlTopicList = ({ data }) => {\n//   const [topics, setTopics] = useState(data);\n//   console.log('this the data', data);\n//   return (\n//     <div>\n//       <div className=\"row\">\n//           {topics.map(({ name }) => (\n           \n//               <div className=\"text-center\" key={name}>\n               \n//                 <h2 className=\"\">{name}</h2>\n            \n//                 </div>\n//           ))\n//           }\n//       </div>\n     \n//     </div>\n//   )\n\n// }\n    ","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/Git-GitHub/Git_Github.jsx",["116"],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/JavaScript/JavaScript.jsx",["117"],"\nimport React , {useState} from 'react';\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport {Table, Button, Tag} from 'antd'\nimport 'antd/dist/antd.css'\n\n//import { ReactDOM } from 'react-dom';\n\nexport default function JavaScrip() {\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/Javascript/Topics');\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <JavascriptTopicList data={data} />;\n  } else {\n    return <Spinner />;\n  }\n\n}\n\n\nconst JavascriptTopicList = ({data})=> {\n  \n    const tableHeaders = [0,20,40,60,80,100]\n    \n    const [state, setState] = useState({\n        task: { options: tableHeaders,\n         extras: data},\n        selected: {}\n      }\n      )\n      const onRadioChange = e => {\n        let name = e.currentTarget.name;\n        let value = e.currentTarget.value;\n        setState({\n          ...state,\n          selected: { ...state.selected, [name]: value }\n        });\n      };\n      const onSubmit = (e) => {\n        e.preventDefault()\n        // console.log('on submit', state.selected);\n        // setState({\n        //   ...state,\n        //   selected: {}\n        // });\n      };\n        let columns = [];\n        columns.push({\n          title: \"Topics\",\n          dataIndex: \"name\",\n          key: \"name\",\n          width: \"45vw\"\n        });\n        state.task.options.forEach((option, i) => {\n          columns.push({\n            title: option,\n            key: option,\n            render: row => {\n              return (\n                <input\n                  type=\"radio\"\n                  checked={state.selected[row.name] == option}\n                  onChange={onRadioChange}\n                  name={row.name}\n                  value={option}\n                />\n              );\n            }\n          });\n        });\n        let rowHeaders = [];\n        state.task.extras.forEach((extra, i) => {\n          rowHeaders.push({ name: `${i + 1}.${extra.name}` });\n        });\n        return (\n          <div>\n            <div>\n                <h1>Javascript</h1>\n            </div>\n            <Table\n              columns={columns}\n              dataSource={rowHeaders}\n              size=\"middle\"\n              bordered\n              pagination={false}\n            />\n            <Tag color=\"red\">Selected options</Tag>\n            <br />\n            {JSON.stringify(state.selected)}\n            <br />\n            <Button onClick={onSubmit} type=\"primary\">\n              {\" \"}\n              Submit\n            </Button>\n          </div>\n        );\n}\n// const HtmlTopicList = ({ data }) => {\n//   const [topics, setTopics] = useState(data);\n//   console.log('this the data', data);\n//   return (\n//     <div>\n//       <div className=\"row\">\n//           {topics.map(({ name }) => (\n           \n//               <div className=\"text-center\" key={name}>\n               \n//                 <h2 className=\"\">{name}</h2>\n            \n//                 </div>\n//           ))\n//           }\n//       </div>\n     \n//     </div>\n//   )\n\n// }\n    ","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/PostgreSQL/PostgreSQL.jsx",["118"],"\nimport React , {useState} from 'react';\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport {Table, Button, Tag} from 'antd'\nimport 'antd/dist/antd.css'\n\n//import { ReactDOM } from 'react-dom';\n\nexport default function PostgreSQL() {\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/PostgreSQL/Topics');\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <PostgresTopicList data={data} />;\n  } else {\n    return <Spinner />;\n  }\n\n}\n\n\nconst PostgresTopicList = ({data})=> {\n  console.log('this the data', data);\n    const tableHeaders = [\"0%-20%\", \"20%-40%\", \"40%-60%\", \"60%-80%\", \"80%-100%\"]\n    \n    const [state, setState] = useState({\n        task: { options: tableHeaders,\n         extras: data},\n        selected: {}\n      }\n      )\n      const onRadioChange = e => {\n        let name = e.currentTarget.name;\n        let value = e.currentTarget.value;\n        setState({\n          ...state,\n          selected: { ...state.selected, [name]: value }\n        });\n      };\n      const onSubmit = () => {\n        console.log(state.selected);\n        setState({\n          ...state,\n          selected: {}\n        });\n      };\n        let columns = [];\n        columns.push({\n          title: \"Topics\",\n          dataIndex: \"name\",\n          key: \"name\",\n          width: \"45vw\"\n        });\n        state.task.options.forEach((option, i) => {\n          columns.push({\n            title: option,\n            key: option,\n            render: row => {\n              return (\n                <input\n                  type=\"radio\"\n                  checked={state.selected[row.name] == option}\n                  onChange={onRadioChange}\n                  name={row.name}\n                  value={option}\n                />\n              );\n            }\n          });\n        });\n        let rowHeaders = [];\n        state.task.extras.forEach((extra, i) => {\n          rowHeaders.push({ name: `${i + 1}.${extra.name}` });\n        });\n        return (\n          <div>\n            <div>\n                <h1>Database</h1>\n            </div>  \n            <Table\n              columns={columns}\n              dataSource={rowHeaders}\n              size=\"middle\"\n              bordered\n              pagination={false}\n            />\n            <Tag color=\"red\">Selected options</Tag>\n            <br />\n            {JSON.stringify(state.selected)}\n            <br />\n            <Button onClick={onSubmit} type=\"primary\">\n              {\" \"}\n              Submit\n            </Button>\n          </div>\n        );\n}\n// const HtmlTopicList = ({ data }) => {\n//   const [topics, setTopics] = useState(data);\n//   console.log('this the data', data);\n//   return (\n//     <div>\n//       <div className=\"row\">\n//           {topics.map(({ name }) => (\n           \n//               <div className=\"text-center\" key={name}>\n               \n//                 <h2 className=\"\">{name}</h2>\n            \n//                 </div>\n//           ))\n//           }\n//       </div>\n     \n//     </div>\n//   )\n\n// }\n    ","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/NodeJS/NodeJS.jsx",["119"],"\nimport React , {useState} from 'react';\nimport useFetch from \"../../../../Auth/useFetch\";\nimport Spinner from \"../../../UI/Spinner\";\nimport {Table, Button, Tag} from 'antd'\nimport 'antd/dist/antd.css'\n\n//import { ReactDOM } from 'react-dom';\n\nexport default function NodeJS() {\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/NodeJS/Topics');\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <NodeJSTopicList data={data} />;\n  } else {\n    return <Spinner />;\n  }\n\n}\n\n\nconst NodeJSTopicList = ({data})=> {\n  console.log('this the data', data);\n    const tableHeaders = [\"0%-20%\", \"20%-40%\", \"40%-60%\", \"60%-80%\", \"80%-100%\"]\n    \n    const [state, setState] = useState({\n        task: { options: tableHeaders,\n         extras: data},\n        selected: {}\n      }\n      )\n      const onRadioChange = e => {\n        let name = e.currentTarget.name;\n        let value = e.currentTarget.value;\n        setState({\n          ...state,\n          selected: { ...state.selected, [name]: value }\n        });\n      };\n      const onSubmit = () => {\n        console.log(state.selected);\n        setState({\n          ...state,\n          selected: {}\n        });\n      };\n        let columns = [];\n        columns.push({\n          title: \"Topics\",\n          dataIndex: \"name\",\n          key: \"name\",\n          width: \"45vw\"\n        });\n        state.task.options.forEach((option, i) => {\n          columns.push({\n            title: option,\n            key: option,\n            render: row => {\n              return (\n                <input\n                  type=\"radio\"\n                  checked={state.selected[row.name] == option}\n                  onChange={onRadioChange}\n                  name={row.name}\n                  value={option}\n                />\n              );\n            }\n          });\n        });\n        let rowHeaders = [];\n        state.task.extras.forEach((extra, i) => {\n          rowHeaders.push({ name: `${i + 1}.${extra.name}` });\n        });\n        return (\n          <div>\n            <div>\n                <h1>Nodejs</h1>\n            </div>  \n            <Table\n              columns={columns}\n              dataSource={rowHeaders}\n              size=\"middle\"\n              bordered\n              pagination={false}\n            />\n            <Tag color=\"red\">Selected options</Tag>\n            <br />\n            {JSON.stringify(state.selected)}\n            <br />\n            <Button onClick={onSubmit} type=\"primary\">\n              {\" \"}\n              Submit\n            </Button>\n          </div>\n        );\n}\n// const HtmlTopicList = ({ data }) => {\n//   const [topics, setTopics] = useState(data);\n//   console.log('this the data', data);\n//   return (\n//     <div>\n//       <div className=\"row\">\n//           {topics.map(({ name }) => (\n           \n//               <div className=\"text-center\" key={name}>\n               \n//                 <h2 className=\"\">{name}</h2>\n            \n//                 </div>\n//           ))\n//           }\n//       </div>\n     \n//     </div>\n//   )\n\n// }\n    ","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/Modules Components/REACTJS/REACTJS.jsx",["120"],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/index.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/useLocalstorage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/StudentModulesBody.js",["121"],"import React,{useState} from 'react';\nimport {Route,Link} from 'react-router-dom';\nimport useFetch from '../../Auth/useFetch';\nimport Spinner from '../UI/Spinner';\nimport \"./StudentModulesBody.scss\";\n//import JavaScript from \"../../components/StudentComponents/Modules Components/JavaScript/JavaScript\";\n\n\n\n\nexport default function StudentModulesBody() {\n\n   let { status, data, error } = useFetch('http://localhost:3001/api/subjects');\n\n  if (status === 'error') {\n    return <div>Error: {error.message}</div>;\n  } else if (status === 'success') {\n    return <SubjectList data={data} />;\n  } else {\n    return <Spinner />;\n  }\n\n}\n  \nconst SubjectList = ({ data }) => {\n  const [subjects, setSubjects] = useState(data);\n\n  \n\n  return (\n    <div>\n      \n      <h3>How to use your tracker page!</h3>\n      <p>Select your level of confidence with the buttons next to each statement. Choosing 'not confident' will colour the statement red. Choosing 'needs review' will colour the statement yellow. Finally, choosing 'feel confident' will colour the statement green. Red topics are those you don't understand well. Yellow still need work. Green are the ones you feel most confident with.</p>\n      <div className=\"row\">\n          {subjects.map(({ name }) => (\n            <div>\n              <div className=\"text-center modules\" key={name}>\n                <Link to={`/modules/${name}`}>\n                <h2 className=\"\">{name}</h2>\n                </Link>\n                \n            </div>\n             <Route path={`/modules/${name}`} component={name} />\n             </div>\n          ))\n          }\n      </div>\n     \n    </div>\n  );\n};\n\n\n\n//     return (\n//         <div className = \"modules\">\n//             <Link to= {`/modules/moduleName`}>\n//             <button>go to detail</button>\n//             </Link>\n//         </div>\n//     )\n// }\n// }","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/StudentSideBar.jsx",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Auth/useFetch.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/UI/Spinner.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/PrivateRouth.js",["122"],"import { Route, Redirect } from 'react-router-dom';\nimport { useAuth } from '../Auth/use-auth';\nimport Spinner from './UI/Spinner';\n\n// A wrapper for <Route> that redirects to the login\n// screen if user not yet authenticated.\nconst PrivateRoute = ({ children, ...rest }) => {\n  let auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => {\n        return auth.user ? (\n          children\n        ) : (\n          // <Redirect\n          //   to={{\n          //     pathname: '/',\n          //     state: { from: location },\n          //   }}\n          // />\n          <Spinner />\n        );\n      }}\n    />\n  );\n};\n\nexport default PrivateRoute;","/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/HomePage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/Pages/StudentPages/RegisterPage.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/HeaderComponent/Header.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/LoginForm.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/RegisterForm.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/HeaderComponent/Logo.js",[],"/home/ameer/Documents/404-team-not-found/CYF-FINAL-PROJECT/frontend/src/components/StudentComponents/HeroImage/HeroImage.js",[],{"ruleId":"123","replacedBy":"124"},{"ruleId":"125","replacedBy":"126"},{"ruleId":"127","severity":1,"message":"128","line":3,"column":9,"nodeType":"129","messageId":"130","endLine":3,"endColumn":14},{"ruleId":"131","severity":1,"message":"132","line":45,"column":7,"nodeType":"133","endLine":45,"endColumn":20},{"ruleId":"127","severity":1,"message":"134","line":45,"column":13,"nodeType":"129","messageId":"130","endLine":45,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":67,"column":53,"nodeType":"137","messageId":"138","endLine":67,"endColumn":55},{"ruleId":"127","severity":1,"message":"139","line":2,"column":17,"nodeType":"129","messageId":"130","endLine":2,"endColumn":25},{"ruleId":"135","severity":1,"message":"136","line":65,"column":53,"nodeType":"137","messageId":"138","endLine":65,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":64,"column":53,"nodeType":"137","messageId":"138","endLine":64,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":64,"column":53,"nodeType":"137","messageId":"138","endLine":64,"endColumn":55},{"ruleId":"135","severity":1,"message":"136","line":64,"column":53,"nodeType":"137","messageId":"138","endLine":64,"endColumn":55},{"ruleId":"127","severity":1,"message":"140","line":26,"column":20,"nodeType":"129","messageId":"130","endLine":26,"endColumn":31},{"ruleId":"127","severity":1,"message":"141","line":1,"column":17,"nodeType":"129","messageId":"130","endLine":1,"endColumn":25},"no-native-reassign",["142"],"no-negated-in-lhs",["143"],"no-unused-vars","'Class' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Git_GitHub must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","'onSubmit' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","'setSubjects' is assigned a value but never used.","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]
=======
[{"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\index.js":"1","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\App.js":"3","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\use-auth.js":"4","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\useLocalStorage.js":"5","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\useLocalstorage.js":"6","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\index.js":"7","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\UI\\Spinner.js":"8","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\useFetch.js":"9","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\PrivateRouth.js":"10","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\HeaderComponent\\Header.js":"11","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\HeaderComponent\\Logo.js":"12","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\StudentPages\\HomePage.js":"13","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\LoginForm.js":"14","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\HeroImage\\HeroImage.js":"15","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\StudentPages\\RegisterPage.js":"16","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\RegisterForm.js":"17","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\FooterComponent\\Footer.js":"18","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\StudentPages\\StudentMainPage.js":"19","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\StudentSideBar.jsx":"20","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\StudentModulesBody.js":"21","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\JavaScript\\JavaScript.jsx":"22","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\HTML-CSS\\HTML_CSS.jsx":"23","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\NodeJS\\NodeJS.jsx":"24","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\PostgreSQL\\PostgreSQL.jsx":"25","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\REACTJS\\REACTJS.jsx":"26","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\Git-GitHub\\Git_Github.jsx":"27"},{"size":236,"mtime":1609787476435,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":2037,"mtime":1610133629741,"results":"31","hashOfConfig":"29"},{"size":2822,"mtime":1610217763306,"results":"32","hashOfConfig":"29"},{"size":1341,"mtime":1609591035372,"results":"33","hashOfConfig":"29"},{"size":1341,"mtime":1609591035372,"results":"34","hashOfConfig":"29"},{"size":363,"mtime":1610032191517,"results":"35","hashOfConfig":"29"},{"size":308,"mtime":1609757786931,"results":"36","hashOfConfig":"29"},{"size":1022,"mtime":1609587725598,"results":"37","hashOfConfig":"29"},{"size":703,"mtime":1609759764283,"results":"38","hashOfConfig":"29"},{"size":1221,"mtime":1609759306664,"results":"39","hashOfConfig":"29"},{"size":317,"mtime":1609759540273,"results":"40","hashOfConfig":"29"},{"size":859,"mtime":1610199902273,"results":"41","hashOfConfig":"29"},{"size":2486,"mtime":1610050919568,"results":"42","hashOfConfig":"29"},{"size":400,"mtime":1609758973998,"results":"43","hashOfConfig":"29"},{"size":628,"mtime":1610050919560,"results":"44","hashOfConfig":"29"},{"size":4352,"mtime":1610133525606,"results":"45","hashOfConfig":"29"},{"size":615,"mtime":1609877515848,"results":"46","hashOfConfig":"29"},{"size":433,"mtime":1610061921773,"results":"47","hashOfConfig":"29"},{"size":1167,"mtime":1609967773431,"results":"48","hashOfConfig":"29"},{"size":1255,"mtime":1610097391182,"results":"49","hashOfConfig":"29"},{"size":4062,"mtime":1610284954432,"results":"50","hashOfConfig":"29"},{"size":2848,"mtime":1610277597236,"results":"51","hashOfConfig":"29"},{"size":2783,"mtime":1610278661392,"results":"52","hashOfConfig":"29"},{"size":2772,"mtime":1610278890481,"results":"53","hashOfConfig":"29"},{"size":2752,"mtime":1610279043273,"results":"54","hashOfConfig":"29"},{"size":2756,"mtime":1610279083098,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"xyaixa",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"58"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\index.js",[],["120","121"],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\reportWebVitals.js",[],["122","123"],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\App.js",["124"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport {Header, PrivateRoute, Home, RegisterPage } from \"./components\";\r\nimport StudentMainPage from './Pages/StudentPages/StudentMainPage'\r\nimport { ProvideAuth } from \"../src/Auth/use-auth\";\r\nimport Footer from \"./components/FooterComponent/Footer\";\r\nimport JavaScript from \"./components/StudentComponents/Modules Components/JavaScript/JavaScript\";\r\nimport HTML_CSS from \"./components/StudentComponents/Modules Components/HTML-CSS/HTML_CSS\";\r\nimport Git_GitHub from \"./components/StudentComponents/Modules Components/Git-GitHub/Git_Github\";\r\n\r\nimport NodeJS from \"./components/StudentComponents/Modules Components/NodeJS/NodeJS\";\r\nimport PostgreSQL from \"./components/StudentComponents/Modules Components/PostgreSQL/PostgreSQL\";\r\nimport REACTJS from \"./components/StudentComponents/Modules Components/REACTJS/REACTJS\";\r\n\r\n\r\n\r\n\r\nfunction App({match}) {\r\n\treturn (\r\n\t\t\r\n\t\t<Router>\r\n\t\t\t<ProvideAuth>\r\n\t\t\t\t<Header />\r\n\r\n\t\t\t\t<Container>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\">\r\n                        <Home />\r\n\t\t\t\t\t\t</Route>\r\n                        <Route exact path=\"/register\">\r\n                            <RegisterPage />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/student_main\">\r\n\t\t\t\t\t\t\t<StudentMainPage />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/JavaScript\">\r\n\t\t\t\t\t\t    <JavaScript />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/HTML_CSS\">\r\n\t\t\t\t\t\t    <HTML_CSS />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/Git_GitHub\">\r\n\t\t\t\t\t\t    <Git_GitHub/>\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/NodeJS\">\r\n\t\t\t\t\t\t<NodeJS />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/PostgreSQL\">\r\n\t\t\t\t\t\t<PostgreSQL />\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t\t<PrivateRoute path=\"/modules/ReactJS\">\r\n\t\t\t\t\t\t<REACTJS/>\r\n\t\t\t\t\t\t</PrivateRoute>\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</Container>\r\n\t\t\t\t<Footer />\r\n\t\t\t</ProvideAuth>\r\n\t\t</Router>\r\n\t);\r\n}\r\n\r\nexport default App;","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\use-auth.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\useLocalStorage.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\useLocalstorage.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\index.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\UI\\Spinner.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Auth\\useFetch.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\PrivateRouth.js",["125"],"import { Route, Redirect } from 'react-router-dom';\r\nimport { useAuth } from '../Auth/use-auth';\r\nimport Spinner from './UI/Spinner';\r\n\r\n// A wrapper for <Route> that redirects to the login\r\n// screen if user not yet authenticated.\r\nconst PrivateRoute = ({ children, ...rest }) => {\r\n  let auth = useAuth();\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={({ location }) => {\r\n        return auth.user ? (\r\n          children\r\n        ) : (\r\n          // <Redirect\r\n          //   to={{\r\n          //     pathname: '/',\r\n          //     state: { from: location },\r\n          //   }}\r\n          // />\r\n          <Spinner />\r\n        );\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default PrivateRoute;","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\HeaderComponent\\Header.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\HeaderComponent\\Logo.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\StudentPages\\HomePage.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\LoginForm.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\HeroImage\\HeroImage.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\StudentPages\\RegisterPage.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\RegisterForm.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\FooterComponent\\Footer.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\Pages\\StudentPages\\StudentMainPage.js",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\StudentSideBar.jsx",[],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\StudentModulesBody.js",["126"],"import React,{useState} from 'react';\r\nimport {Route,Link} from 'react-router-dom';\r\nimport useFetch from '../../Auth/useFetch';\r\nimport Spinner from '../UI/Spinner';\r\nimport \"./StudentModulesBody.scss\";\r\n//import JavaScript from \"../../components/StudentComponents/Modules Components/JavaScript/JavaScript\";\r\n\r\n\r\n\r\n\r\nexport default function StudentModulesBody() {\r\n\r\n   let { status, data, error } = useFetch('http://localhost:3001/api/subjects');\r\n\r\n  if (status === 'error') {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === 'success') {\r\n    return <SubjectList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n\r\n}\r\n  \r\nconst SubjectList = ({ data }) => {\r\n  const [subjects, setSubjects] = useState(data);\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      \r\n\r\n      <div className=\"row\">\r\n          {subjects.map(({ name }) => (\r\n            <div>\r\n              <div className=\"text-center modules\" key={name}>\r\n                <Link to={`/modules/${name}`}>\r\n                <h2 className=\"\">{name}</h2>\r\n                </Link>\r\n                \r\n            </div>\r\n             <Route path={`/modules/${name}`} component={name} />\r\n             </div>\r\n          ))\r\n          }\r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\JavaScript\\JavaScript.jsx",["127","128","129"],"C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\HTML-CSS\\HTML_CSS.jsx",["130","131"],"\r\nimport React, { useState } from \"react\";\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport { Table, Button, Tag } from \"antd\";\r\nimport \"antd/dist/antd.css\";\r\nimport \"./HTML_CSS.scss\";\r\n\r\n\r\nexport default function HTML_CSS() {\r\n  let { status, data, error } = useFetch(\r\n    \"http://localhost:3001/api/Modules/HTML_CSS/Topics\"\r\n  );\r\n  console.log(data);\r\n\r\n  if (status === \"error\") {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === \"success\") {\r\n    return <HtmlTopicList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n}\r\n\r\nconst HtmlTopicList = ({ data }) => {\r\n  // let history = useHistory();\r\n  //let auth = useAuth();\r\n\r\n  console.log(\"this the data\", data);\r\n  const tableHeaders = [20, 40, 60, 80, 100];\r\n\r\n  const [state, setState] = useState({\r\n    task: { options: tableHeaders, extras: data },\r\n    selected: {},\r\n  });\r\n  const onRadioChange = (e) => {\r\n    console.log(e.currentTarget);\r\n    let name = e.currentTarget.id;\r\n    let value = e.currentTarget.value;\r\n    setState({\r\n      ...state,\r\n      selected: { ...state.selected, [name]: value },\r\n    });\r\n  };\r\n  const onSubmit = () => {\r\n    // convert TO array\r\n    const results = [];\r\n    for (const [key, value] of Object.entries(state.selected)) {\r\n      results.push({\r\n        topic_id: key,\r\n        vote: value,\r\n      });\r\n    }\r\n    fetch(\"http://localhost:3001/api/add-grade\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${JSON.parse(\r\n          window.localStorage.getItem(\"token\")\r\n        )}`,\r\n      },\r\n      body: JSON.stringify(results),\r\n    });\r\n  };\r\n  let columns = [];\r\n  columns.push({\r\n    title: \"HTML-CSS Topics\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    width: \"45vw\",\r\n  });\r\n  state.task.options.forEach((option, i) => {\r\n    columns.push({\r\n      title: option,\r\n      key: option,\r\n      render: (row) => {\r\n        return (\r\n          <input\r\n            type=\"radio\"\r\n            checked={state.selected[row.id] == option}\r\n            onChange={onRadioChange}\r\n            name={row.name}\r\n            id={row.id}\r\n            value={option}\r\n          />\r\n        );\r\n      },\r\n    });\r\n  });\r\n  let rowHeaders = [];\r\n  state.task.extras.forEach((extra, i) => {\r\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\r\n  });\r\n  return (\r\n    <div>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={rowHeaders}\r\n        size=\"middle\"\r\n        bordered\r\n        pagination={false}\r\n      />\r\n      {/* <Tag color=\"red\">Selected options</Tag> */}\r\n      <br />\r\n      {JSON.stringify(state.selected)}\r\n      <br />\r\n      <Button onClick={onSubmit} type=\"primary\">\r\n        {\" \"}\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\NodeJS\\NodeJS.jsx",["132","133"],"import React , {useState} from 'react';\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport {Table, Button, Tag} from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport \"./NodeJS.scss\";\r\n//import { ReactDOM } from 'react-dom';\r\n\r\nexport default function NodeJS() {\r\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/NodeJS/Topics');\r\n\r\n  if (status === 'error') {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === 'success') {\r\n    return <NodeJsTopicList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n\r\n}\r\n\r\n\r\nconst NodeJsTopicList = ({ data }) => {\r\n  console.log(\"this the data\", data);\r\n  const tableHeaders = [20, 40, 60, 80, 100];\r\n\r\n  const [state, setState] = useState({\r\n    task: { options: tableHeaders, extras: data },\r\n    selected: {},\r\n  });\r\n  const onRadioChange = (e) => {\r\n    console.log(e.currentTarget);\r\n    let name = e.currentTarget.id;\r\n    let value = e.currentTarget.value;\r\n    setState({\r\n      ...state,\r\n      selected: { ...state.selected, [name]: value },\r\n    });\r\n  };\r\n  const onSubmit = () => {\r\n    // convert TO array\r\n    const results = [];\r\n    for (const [key, value] of Object.entries(state.selected)) {\r\n      results.push({\r\n        topic_id: key,\r\n        vote: value,\r\n      });\r\n    }\r\n    fetch(\"http://localhost:3001/api/add-grade\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${JSON.parse(\r\n          window.localStorage.getItem(\"token\")\r\n        )}`,\r\n      },\r\n      body: JSON.stringify(results),\r\n    });\r\n  };\r\n  let columns = [];\r\n  columns.push({\r\n    title: \"NodeJS Topics\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    width: \"45vw\",\r\n  });\r\n  state.task.options.forEach((option, i) => {\r\n    columns.push({\r\n      title: option,\r\n      key: option,\r\n      render: (row) => {\r\n        return (\r\n          <input\r\n            type=\"radio\"\r\n            checked={state.selected[row.id] == option}\r\n            onChange={onRadioChange}\r\n            name={row.name}\r\n            id={row.id}\r\n            value={option}\r\n          />\r\n        );\r\n      },\r\n    });\r\n  });\r\n  let rowHeaders = [];\r\n  state.task.extras.forEach((extra, i) => {\r\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\r\n  });\r\n  return (\r\n    <div>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={rowHeaders}\r\n        size=\"middle\"\r\n        bordered\r\n        pagination={false}\r\n      />\r\n      {/* <Tag color=\"red\">Selected options</Tag> */}\r\n      <br />\r\n      {JSON.stringify(state.selected)}\r\n      <br />\r\n      <Button onClick={onSubmit} type=\"primary\">\r\n        {\" \"}\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\PostgreSQL\\PostgreSQL.jsx",["134","135"],"import React , {useState} from 'react';\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport {Table, Button, Tag} from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport \"./PostgreSQL.scss\";\r\n\r\n\r\nexport default function PostgreSQL() {\r\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/PostgreSQL/Topics');\r\n\r\n  if (status === 'error') {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === 'success') {\r\n    return <PostgreSqlTopicList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n\r\n}\r\n\r\n\r\nconst PostgreSqlTopicList = ({ data }) => {\r\n\r\n  console.log(\"this the data\", data);\r\n  const tableHeaders = [20, 40, 60, 80, 100];\r\n\r\n  const [state, setState] = useState({\r\n    task: { options: tableHeaders, extras: data },\r\n    selected: {},\r\n  });\r\n  const onRadioChange = (e) => {\r\n    console.log(e.currentTarget);\r\n    let name = e.currentTarget.id;\r\n    let value = e.currentTarget.value;\r\n    setState({\r\n      ...state,\r\n      selected: { ...state.selected, [name]: value },\r\n    });\r\n  };\r\n  const onSubmit = () => {\r\n    // convert TO array\r\n    const results = [];\r\n    for (const [key, value] of Object.entries(state.selected)) {\r\n      results.push({\r\n        topic_id: key,\r\n        vote: value,\r\n      });\r\n    }\r\n    fetch(\"http://localhost:3001/api/add-grade\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${JSON.parse(\r\n          window.localStorage.getItem(\"token\")\r\n        )}`,\r\n      },\r\n      body: JSON.stringify(results),\r\n    });\r\n  };\r\n  let columns = [];\r\n  columns.push({\r\n    title: \"PostgreSQL Topics\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    width: \"45vw\",\r\n  });\r\n  state.task.options.forEach((option, i) => {\r\n    columns.push({\r\n      title: option,\r\n      key: option,\r\n      render: (row) => {\r\n        return (\r\n          <input\r\n            type=\"radio\"\r\n            checked={state.selected[row.id] == option}\r\n            onChange={onRadioChange}\r\n            name={row.name}\r\n            id={row.id}\r\n            value={option}\r\n          />\r\n        );\r\n      },\r\n    });\r\n  });\r\n  let rowHeaders = [];\r\n  state.task.extras.forEach((extra, i) => {\r\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\r\n  });\r\n  return (\r\n    <div>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={rowHeaders}\r\n        size=\"middle\"\r\n        bordered\r\n        pagination={false}\r\n      />\r\n      {/* <Tag color=\"red\">Selected options</Tag> */}\r\n      <br />\r\n      {JSON.stringify(state.selected)}\r\n      <br />\r\n      <Button onClick={onSubmit} type=\"primary\">\r\n        {\" \"}\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\REACTJS\\REACTJS.jsx",["136","137"],"import React , {useState} from 'react';\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport {Table, Button, Tag} from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport \"./REACTJS.scss\";\r\n\r\n\r\nexport default function ReactJs() {\r\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/ReactJs/Topics');\r\n\r\n  if (status === 'error') {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === 'success') {\r\n    return <ReactJsTopicList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n\r\n}\r\n\r\n\r\nconst ReactJsTopicList = ({ data }) => {\r\n\r\n  console.log(\"this the data\", data);\r\n  const tableHeaders = [20, 40, 60, 80, 100];\r\n\r\n  const [state, setState] = useState({\r\n    task: { options: tableHeaders, extras: data },\r\n    selected: {},\r\n  });\r\n  const onRadioChange = (e) => {\r\n    console.log(e.currentTarget);\r\n    let name = e.currentTarget.id;\r\n    let value = e.currentTarget.value;\r\n    setState({\r\n      ...state,\r\n      selected: { ...state.selected, [name]: value },\r\n    });\r\n  };\r\n  const onSubmit = () => {\r\n    // convert TO array\r\n    const results = [];\r\n    for (const [key, value] of Object.entries(state.selected)) {\r\n      results.push({\r\n        topic_id: key,\r\n        vote: value,\r\n      });\r\n    }\r\n    fetch(\"http://localhost:3001/api/add-grade\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${JSON.parse(\r\n          window.localStorage.getItem(\"token\")\r\n        )}`,\r\n      },\r\n      body: JSON.stringify(results),\r\n    });\r\n  };\r\n  let columns = [];\r\n  columns.push({\r\n    title: \"ReactJs Topics\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    width: \"45vw\",\r\n  });\r\n  state.task.options.forEach((option, i) => {\r\n    columns.push({\r\n      title: option,\r\n      key: option,\r\n      render: (row) => {\r\n        return (\r\n          <input\r\n            type=\"radio\"\r\n            checked={state.selected[row.id] == option}\r\n            onChange={onRadioChange}\r\n            name={row.name}\r\n            id={row.id}\r\n            value={option}\r\n          />\r\n        );\r\n      },\r\n    });\r\n  });\r\n  let rowHeaders = [];\r\n  state.task.extras.forEach((extra, i) => {\r\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\r\n  });\r\n  return (\r\n    <div>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={rowHeaders}\r\n        size=\"middle\"\r\n        bordered\r\n        pagination={false}\r\n      />\r\n      {/* <Tag color=\"red\">Selected options</Tag> */}\r\n      <br />\r\n      {JSON.stringify(state.selected)}\r\n      <br />\r\n      <Button onClick={onSubmit} type=\"primary\">\r\n        {\" \"}\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};","C:\\Users\\murse\\Documents\\GitHub\\CYF-FINAL-PROJECT\\frontend\\src\\components\\StudentComponents\\Modules Components\\Git-GitHub\\Git_Github.jsx",["138","139"],"import React , {useState} from 'react';\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport {Table, Button, Tag} from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport \"./Git_GitHub.scss\";\r\n\r\n\r\nexport default function Git_GitHub() {\r\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/Git-GitHub/Topics');\r\n\r\n  if (status === 'error') {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === 'success') {\r\n    return <GitTopicList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n\r\n}\r\n\r\n\r\nconst GitTopicList = ({ data }) => {\r\n\r\n  console.log(\"this the data\", data);\r\n  const tableHeaders = [20, 40, 60, 80, 100];\r\n\r\n  const [state, setState] = useState({\r\n    task: { options: tableHeaders, extras: data },\r\n    selected: {},\r\n  });\r\n  const onRadioChange = (e) => {\r\n    console.log(e.currentTarget);\r\n    let name = e.currentTarget.id;\r\n    let value = e.currentTarget.value;\r\n    setState({\r\n      ...state,\r\n      selected: { ...state.selected, [name]: value },\r\n    });\r\n  };\r\n  const onSubmit = () => {\r\n    // convert TO array\r\n    const results = [];\r\n    for (const [key, value] of Object.entries(state.selected)) {\r\n      results.push({\r\n        topic_id: key,\r\n        vote: value,\r\n      });\r\n    }\r\n    fetch(\"http://localhost:3001/api/add-grade\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: `Bearer ${JSON.parse(\r\n          window.localStorage.getItem(\"token\")\r\n        )}`,\r\n      },\r\n      body: JSON.stringify(results),\r\n    });\r\n  };\r\n  let columns = [];\r\n  columns.push({\r\n    title: \"Git/GitHub Topics\",\r\n    dataIndex: \"name\",\r\n    key: \"name\",\r\n    width: \"45vw\",\r\n  });\r\n  state.task.options.forEach((option, i) => {\r\n    columns.push({\r\n      title: option,\r\n      key: option,\r\n      render: (row) => {\r\n        return (\r\n          <input\r\n            type=\"radio\"\r\n            checked={state.selected[row.id] == option}\r\n            onChange={onRadioChange}\r\n            name={row.name}\r\n            id={row.id}\r\n            value={option}\r\n          />\r\n        );\r\n      },\r\n    });\r\n  });\r\n  let rowHeaders = [];\r\n  state.task.extras.forEach((extra, i) => {\r\n    rowHeaders.push({ id: extra.topic_id, name: `${i + 1}.${extra.name}` });\r\n  });\r\n  return (\r\n    <div>\r\n      <Table\r\n        columns={columns}\r\n        dataSource={rowHeaders}\r\n        size=\"middle\"\r\n        bordered\r\n        pagination={false}\r\n      />\r\n      {/* <Tag color=\"red\">Selected options</Tag> */}\r\n      <br />\r\n      {JSON.stringify(state.selected)}\r\n      <br />\r\n      <Button onClick={onSubmit} type=\"primary\">\r\n        {\" \"}\r\n        Submit\r\n      </Button>\r\n    </div>\r\n  );\r\n};",{"ruleId":"140","replacedBy":"141"},{"ruleId":"142","replacedBy":"143"},{"ruleId":"140","replacedBy":"144"},{"ruleId":"142","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":43,"column":11,"nodeType":"148","endLine":43,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":25},{"ruleId":"149","severity":1,"message":"153","line":26,"column":20,"nodeType":"151","messageId":"152","endLine":26,"endColumn":31},{"ruleId":"149","severity":1,"message":"154","line":4,"column":25,"nodeType":"151","messageId":"152","endLine":4,"endColumn":28},{"ruleId":"149","severity":1,"message":"155","line":47,"column":9,"nodeType":"151","messageId":"152","endLine":47,"endColumn":17},{"ruleId":"156","severity":1,"message":"157","line":129,"column":45,"nodeType":"158","messageId":"159","endLine":129,"endColumn":47},{"ruleId":"149","severity":1,"message":"154","line":5,"column":25,"nodeType":"151","messageId":"152","endLine":5,"endColumn":28},{"ruleId":"156","severity":1,"message":"157","line":80,"column":45,"nodeType":"158","messageId":"159","endLine":80,"endColumn":47},{"ruleId":"149","severity":1,"message":"154","line":4,"column":24,"nodeType":"151","messageId":"152","endLine":4,"endColumn":27},{"ruleId":"156","severity":1,"message":"157","line":75,"column":45,"nodeType":"158","messageId":"159","endLine":75,"endColumn":47},{"ruleId":"149","severity":1,"message":"154","line":4,"column":24,"nodeType":"151","messageId":"152","endLine":4,"endColumn":27},{"ruleId":"156","severity":1,"message":"157","line":76,"column":45,"nodeType":"158","messageId":"159","endLine":76,"endColumn":47},{"ruleId":"149","severity":1,"message":"154","line":4,"column":24,"nodeType":"151","messageId":"152","endLine":4,"endColumn":27},{"ruleId":"156","severity":1,"message":"157","line":76,"column":45,"nodeType":"158","messageId":"159","endLine":76,"endColumn":47},{"ruleId":"149","severity":1,"message":"154","line":4,"column":24,"nodeType":"151","messageId":"152","endLine":4,"endColumn":27},{"ruleId":"156","severity":1,"message":"157","line":76,"column":45,"nodeType":"158","messageId":"159","endLine":76,"endColumn":47},"no-native-reassign",["160"],"no-negated-in-lhs",["161"],["160"],["161"],"react/jsx-pascal-case","Imported JSX component Git_GitHub must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'setSubjects' is assigned a value but never used.","'Tag' is defined but never used.","'addValue' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]
>>>>>>> 9b66021d4ea2c4b1a26f24fe0da0445711ec909c
