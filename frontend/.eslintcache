[{"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\index.js":"1","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\App.js":"2","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\Auth\\use-auth.js":"3","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\FooterComponent\\Footer.js":"4","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\Pages\\StudentPages\\StudentMainPage.js":"5","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\index.js":"6","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\Auth\\useLocalstorage.js":"7","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\StudentSideBar.jsx":"8","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\Auth\\useFetch.js":"9","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\UI\\Spinner.js":"10","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\PrivateRouth.js":"11","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\Pages\\StudentPages\\RegisterPage.js":"12","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\Pages\\StudentPages\\HomePage.js":"13","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\HeaderComponent\\Header.js":"14","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\RegisterForm.js":"15","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\LoginForm.js":"16","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\HeaderComponent\\Logo.js":"17","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\HeroImage\\HeroImage.js":"18","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\Modules Components\\Git-GitHub\\Git_Github.jsx":"19","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\Modules Components\\PostgreSQL\\PostgreSQL.jsx":"20","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\Modules Components\\JavaScript\\JavaScript.jsx":"21","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\Modules Components\\NodeJS\\NodeJS.jsx":"22","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\Modules Components\\REACTJS\\REACTJS.jsx":"23","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\Modules Components\\HTML-CSS\\HTML_CSS.jsx":"24","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\StudentModulesBody.js":"25"},{"size":249,"mtime":1609870603604,"results":"26","hashOfConfig":"27"},{"size":2028,"mtime":1610133669581,"results":"28","hashOfConfig":"27"},{"size":2822,"mtime":1609870603557,"results":"29","hashOfConfig":"27"},{"size":615,"mtime":1609942568242,"results":"30","hashOfConfig":"27"},{"size":433,"mtime":1610133669604,"results":"31","hashOfConfig":"27"},{"size":363,"mtime":1610133669634,"results":"32","hashOfConfig":"27"},{"size":1341,"mtime":1609870603557,"results":"33","hashOfConfig":"27"},{"size":1167,"mtime":1610133669634,"results":"34","hashOfConfig":"27"},{"size":1022,"mtime":1609870603557,"results":"35","hashOfConfig":"27"},{"size":308,"mtime":1609870603604,"results":"36","hashOfConfig":"27"},{"size":703,"mtime":1609870603604,"results":"37","hashOfConfig":"27"},{"size":628,"mtime":1610133669600,"results":"38","hashOfConfig":"27"},{"size":849,"mtime":1610133669582,"results":"39","hashOfConfig":"27"},{"size":1221,"mtime":1609870603604,"results":"40","hashOfConfig":"27"},{"size":4347,"mtime":1610133669634,"results":"41","hashOfConfig":"27"},{"size":2486,"mtime":1610133669606,"results":"42","hashOfConfig":"27"},{"size":317,"mtime":1609870603604,"results":"43","hashOfConfig":"27"},{"size":400,"mtime":1609870603604,"results":"44","hashOfConfig":"27"},{"size":2652,"mtime":1610133669614,"results":"45","hashOfConfig":"27"},{"size":2705,"mtime":1610133669624,"results":"46","hashOfConfig":"27"},{"size":2719,"mtime":1610133669620,"results":"47","hashOfConfig":"27"},{"size":2685,"mtime":1610133669622,"results":"48","hashOfConfig":"27"},{"size":2690,"mtime":1610133669626,"results":"49","hashOfConfig":"27"},{"size":3067,"mtime":1610133669616,"results":"50","hashOfConfig":"27"},{"size":1255,"mtime":1610133669634,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1a2chu2",{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"62"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"62"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\index.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\App.js",["109","110"],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\Auth\\use-auth.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\FooterComponent\\Footer.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\Pages\\StudentPages\\StudentMainPage.js",[],["111","112"],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\index.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\Auth\\useLocalstorage.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\StudentSideBar.jsx",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\Auth\\useFetch.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\UI\\Spinner.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\PrivateRouth.js",["113"],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\Pages\\StudentPages\\RegisterPage.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\Pages\\StudentPages\\HomePage.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\HeaderComponent\\Header.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\RegisterForm.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\LoginForm.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\HeaderComponent\\Logo.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\HeroImage\\HeroImage.js",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\Modules Components\\Git-GitHub\\Git_Github.jsx",["114"],"<<<<<<< Updated upstream\r\nimport React, {useState} from 'react';\r\n=======\r\nimport React , {useState}from 'react';\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\n>>>>>>> Stashed changes\r\nimport \"./Git_GitHub.scss\";\r\nimport {Table, Button, Tag} from 'antd';\r\nimport 'antd/dist/antd.css' \r\n\r\n<<<<<<< Updated upstream\r\nexport default function Git_Github() {\r\n    const tableHeaders = [\"0%-20%\", \"20%-40%\", \"40%-60%\", \"60%-80%\", \"80%-100%\"] \r\n    const tableTopics = [\r\n        \"Can initialize a repo for a new project\",\r\n        \"Can use a .gitignore file\",\r\n        \"Can use the commands git add, git commit and git push correctly\",\r\n        \"Can make a pull request on GitHub\",\r\n        \"Know how to handle a merge conflict\",\r\n        \"Know how to fork a repo and understand how this differs from cloning\"\r\n    ]\r\n    const [state, setState] = useState({\r\n        task: { options: tableHeaders,\r\n         extras: tableTopics},\r\n        selected: {}\r\n      }\r\n      )\r\n      \r\n      const onRadioChange = e => {\r\n        let name = e.currentTarget.name;\r\n        let value = e.currentTarget.value;\r\n        setState({\r\n          ...state,\r\n          selected: { ...state.selected, [name]: value }\r\n        });\r\n      };\r\n      const onSubmit = () => {\r\n        console.log(state.selected);\r\n        setState({\r\n          ...state,\r\n          selected: {}\r\n        });\r\n      };\r\n      \r\n        let columns = [];\r\n        columns.push({\r\n          title: \"Topics\",\r\n          dataIndex: \"name\",\r\n          key: \"name\",\r\n          width: \"45vw\"\r\n        });\r\n    \r\n        state.task.options.forEach((option, i) => {\r\n          columns.push({\r\n            title: option,\r\n            key: option,\r\n            render: row => {\r\n              return (\r\n                <input\r\n                  type=\"radio\"\r\n                  checked={state.selected[row.name] == option}\r\n                  onChange={onRadioChange}\r\n                  name={row.name}\r\n                  value={option}\r\n                />\r\n              );\r\n            }\r\n          });\r\n        });\r\n    \r\n        let rowHeaders = [];\r\n        state.task.extras.forEach((extra, i) => {\r\n          rowHeaders.push({ name: `${i + 1}.${extra}` });\r\n        });\r\n        return (\r\n          <div>\r\n            \r\n            <Table\r\n              columns={columns}\r\n              dataSource={rowHeaders}\r\n              size=\"middle\"\r\n              bordered\r\n              pagination={false}\r\n            />\r\n    \r\n            <Tag color=\"red\">Selected options</Tag>\r\n            <br />\r\n    \r\n            {JSON.stringify(state.selected)}\r\n            <br />\r\n            <Button onClick={onSubmit} type=\"primary\">\r\n              {\" \"}\r\n              Submit\r\n            </Button>\r\n            \r\n          </div>\r\n        ); \r\n=======\r\nexport default function Git_GitHub() {\r\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/Git_GitHub/Topics');\r\n\r\n  if (status === 'error') {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === 'success') {\r\n    return <GitTopicList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n\r\n}\r\n  \r\nconst GitTopicList = ({ data }) => {\r\n  const [topics, setTopics] = useState(data);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row\">\r\n          {topics.map(({ name }) => (\r\n           \r\n              <div className=\"text-center\" key={name}>\r\n               \r\n                <h2 className=\"\">{name}</h2>\r\n            \r\n                </div>\r\n          ))\r\n          }\r\n      </div>\r\n     \r\n    </div>\r\n  )\r\n>>>>>>> Stashed changes\r\n}\r\n","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\Modules Components\\PostgreSQL\\PostgreSQL.jsx",["115"],"import React , {useState} from 'react';\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport {Table, Button, Tag} from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport \"./PostgreSQL.scss\";\r\n//import { ReactDOM } from 'react-dom';\r\n\r\nexport default function PostgreSQL() {\r\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/PostgreSQL/Topics');\r\n\r\n  if (status === 'error') {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === 'success') {\r\n    return <PostgreSqlTopicList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n\r\n}\r\n\r\n\r\nconst PostgreSqlTopicList = ({data})=> {\r\n  console.log('this the data', data);\r\n    const tableHeaders = [\"0%-20%\", \"20%-40%\", \"40%-60%\", \"60%-80%\", \"80%-100%\"]\r\n    \r\n    const [state, setState] = useState({\r\n        task: { options: tableHeaders,\r\n         extras: data},\r\n        selected: {}\r\n      }\r\n      )\r\n      const onRadioChange = e => {\r\n        let name = e.currentTarget.name;\r\n        let value = e.currentTarget.value;\r\n        setState({\r\n          ...state,\r\n          selected: { ...state.selected, [name]: value }\r\n        });\r\n      };\r\n      const onSubmit = () => {\r\n        console.log(state.selected);\r\n        setState({\r\n          ...state,\r\n          selected: {}\r\n        });\r\n      };\r\n        let columns = [];\r\n        columns.push({\r\n          title: \"Topics\",\r\n          dataIndex: \"name\",\r\n          key: \"name\",\r\n          width: \"45vw\"\r\n        });\r\n        state.task.options.forEach((option, i) => {\r\n          columns.push({\r\n            title: option,\r\n            key: option,\r\n            render: row => {\r\n              return (\r\n                <input\r\n                  type=\"radio\"\r\n                  checked={state.selected[row.name] === option}\r\n                  onChange={onRadioChange}\r\n                  name={row.name}\r\n                  value={option}\r\n                />\r\n              );\r\n            }\r\n          });\r\n        });\r\n        let rowHeaders = [];\r\n        state.task.extras.forEach((extra, i) => {\r\n          rowHeaders.push({ name: `${i + 1}.${extra.name}` });\r\n        });\r\n        return (\r\n          <div>\r\n            <Table\r\n              columns={columns}\r\n              dataSource={rowHeaders}\r\n              size=\"middle\"\r\n              bordered\r\n              pagination={false}\r\n            />\r\n            <Tag color=\"red\">Selected options</Tag>\r\n            <br />\r\n            {JSON.stringify(state.selected)}\r\n            <br />\r\n            <Button onClick={onSubmit} type=\"primary\">\r\n              {\" \"}\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        );\r\n}\r\n","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\Modules Components\\JavaScript\\JavaScript.jsx",["116"],"\r\nimport React , {useState} from 'react';\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport {Table, Button, Tag} from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport \"./JavaScript.scss\";\r\n//import { ReactDOM } from 'react-dom';\r\n\r\nexport default function JavaScript() {\r\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/JavaScript/Topics');\r\n\r\n  if (status === 'error') {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === 'success') {\r\n    return <JavaScriptTopicList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n\r\n}\r\n\r\n\r\nconst JavaScriptTopicList = ({data})=> {\r\n  console.log('this the data', data);\r\n    const tableHeaders = [\"0%-20%\", \"20%-40%\", \"40%-60%\", \"60%-80%\", \"80%-100%\"]\r\n    \r\n    const [state, setState] = useState({\r\n        task: { options: tableHeaders,\r\n         extras: data},\r\n        selected: {}\r\n      }\r\n      )\r\n      const onRadioChange = e => {\r\n        let name = e.currentTarget.name;\r\n        let value = e.currentTarget.value;\r\n        setState({\r\n          ...state,\r\n          selected: { ...state.selected, [name]: value }\r\n        });\r\n      };\r\n      const onSubmit = () => {\r\n        console.log(state.selected);\r\n        setState({\r\n          ...state,\r\n          selected: {}\r\n        });\r\n      };\r\n        let columns = [];\r\n        columns.push({\r\n          title: \"Topics\",\r\n          dataIndex: \"name\",\r\n          key: \"name\",\r\n          width: \"45vw\"\r\n        });\r\n        state.task.options.forEach((option, i) => {\r\n          columns.push({\r\n            title: option,\r\n            key: option,\r\n            render: row => {\r\n              return (\r\n                <input\r\n                  type=\"radio\"\r\n                  checked={state.selected[row.name] === option}\r\n                  onChange={onRadioChange}\r\n                  name={row.name}\r\n                  value={option}\r\n                />\r\n              );\r\n            }\r\n          });\r\n        });\r\n        let rowHeaders = [];\r\n        state.task.extras.forEach((extra, i) => {\r\n          rowHeaders.push({ name: `${i + 1}.${extra.name}` });\r\n        });\r\n        return (\r\n          <div>\r\n            <Table\r\n              columns={columns}\r\n              dataSource={rowHeaders}\r\n              size=\"middle\"\r\n              bordered\r\n              pagination={false}\r\n            />\r\n            <Tag color=\"red\">Selected options</Tag>\r\n            <br />\r\n            {JSON.stringify(state.selected)}\r\n            <br />\r\n            <Button onClick={onSubmit} type=\"primary\">\r\n              {\" \"}\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        );\r\n}\r\n\r\n\r\n\r\n\r\n    ","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\Modules Components\\NodeJS\\NodeJS.jsx",["117"],"import React , {useState} from 'react';\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport {Table, Button, Tag} from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport \"./NodeJS.scss\";\r\n//import { ReactDOM } from 'react-dom';\r\n\r\nexport default function NodeJS() {\r\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/NodeJS/Topics');\r\n\r\n  if (status === 'error') {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === 'success') {\r\n    return <NodeJsTopicList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n\r\n}\r\n\r\n\r\nconst NodeJsTopicList = ({data})=> {\r\n  console.log('this the data', data);\r\n    const tableHeaders = [\"0%-20%\", \"20%-40%\", \"40%-60%\", \"60%-80%\", \"80%-100%\"]\r\n    \r\n    const [state, setState] = useState({\r\n        task: { options: tableHeaders,\r\n         extras: data},\r\n        selected: {}\r\n      }\r\n      )\r\n      const onRadioChange = e => {\r\n        let name = e.currentTarget.name;\r\n        let value = e.currentTarget.value;\r\n        setState({\r\n          ...state,\r\n          selected: { ...state.selected, [name]: value }\r\n        });\r\n      };\r\n      const onSubmit = () => {\r\n        console.log(state.selected);\r\n        setState({\r\n          ...state,\r\n          selected: {}\r\n        });\r\n      };\r\n        let columns = [];\r\n        columns.push({\r\n          title: \"Topics\",\r\n          dataIndex: \"name\",\r\n          key: \"name\",\r\n          width: \"45vw\"\r\n        });\r\n        state.task.options.forEach((option, i) => {\r\n          columns.push({\r\n            title: option,\r\n            key: option,\r\n            render: row => {\r\n              return (\r\n                <input\r\n                  type=\"radio\"\r\n                  checked={state.selected[row.name] === option}\r\n                  onChange={onRadioChange}\r\n                  name={row.name}\r\n                  value={option}\r\n                />\r\n              );\r\n            }\r\n          });\r\n        });\r\n        let rowHeaders = [];\r\n        state.task.extras.forEach((extra, i) => {\r\n          rowHeaders.push({ name: `${i + 1}.${extra.name}` });\r\n        });\r\n        return (\r\n          <div>\r\n            <Table\r\n              columns={columns}\r\n              dataSource={rowHeaders}\r\n              size=\"middle\"\r\n              bordered\r\n              pagination={false}\r\n            />\r\n            <Tag color=\"red\">Selected options</Tag>\r\n            <br />\r\n            {JSON.stringify(state.selected)}\r\n            <br />\r\n            <Button onClick={onSubmit} type=\"primary\">\r\n              {\" \"}\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        );\r\n}\r\n","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\Modules Components\\REACTJS\\REACTJS.jsx",[],"C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\Modules Components\\HTML-CSS\\HTML_CSS.jsx",["118"],"\r\nimport React , {useState} from 'react';\r\nimport useFetch from \"../../../../Auth/useFetch\";\r\nimport Spinner from \"../../../UI/Spinner\";\r\nimport {Table, Button, Tag} from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport \"./HTML_CSS.scss\";\r\n//import { ReactDOM } from 'react-dom';\r\n\r\nexport default function HTML_CSS() {\r\n  let { status, data, error } = useFetch('http://localhost:3001/api/Modules/HTML_CSS/Topics');\r\n  console.log(data);\r\n\r\n  if (status === 'error') {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === 'success') {\r\n    return <HtmlTopicList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n\r\n}\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\nconst HtmlTopicList = ({data})=> {\r\n  console.log('this the data', data);\r\n    const tableHeaders = [20,40,60,80,100]\r\n    \r\n    const [state, setState] = useState({\r\n        task: { options: tableHeaders,\r\n         extras: data},\r\n        selected: {}\r\n      }\r\n      )\r\n      const onRadioChange =  e => {\r\n        let name = e.currentTarget.name;\r\n        let value = e.currentTarget.value;\r\n        setState({\r\n          ...state,\r\n           selected: { ...state.selected, [name]: value }\r\n        });\r\n      };\r\n      const onSubmit =  () => {\r\n      //   let name = e.currentTarget.name;\r\n      //   let value = e.currentTarget.value;\r\n\r\n      //   const body = setState(state.value);\r\n      //   const response =  fetch(\"http://localhost:3001/api/add-grade\", {\r\n      //     method : \"POST\",\r\n      //     headers : {\"Content-Type\" : \"application/json\"},\r\n      //     body: JSON.stringify(body)\r\n      // });\r\n        console.log(state.selected);\r\n        setState({\r\n          ...state,\r\n          selected: {}\r\n        });\r\n      };\r\n        let columns = [];\r\n        columns.push({\r\n          title: \"Topics\",\r\n          dataIndex: \"name\",\r\n          key: \"name\",\r\n          width: \"45vw\"\r\n        });\r\n        state.task.options.forEach((option, i) => {\r\n          columns.push({\r\n            title: option,\r\n            key: option,\r\n            render: row => {\r\n              return (\r\n                <input\r\n                  type=\"radio\"\r\n                  checked={state.selected[row.name] == option}\r\n                  onChange={onRadioChange}\r\n                  name={row.name}\r\n                  value={option}\r\n                />\r\n              );\r\n            }\r\n          });\r\n        });\r\n        let rowHeaders = [];\r\n        state.task.extras.forEach((extra, i) => {\r\n          rowHeaders.push({ name: `${i + 1}.${extra.name}` });\r\n        });\r\n        return (\r\n          <div>\r\n            <Table\r\n              columns={columns}\r\n              dataSource={rowHeaders}\r\n              size=\"middle\"\r\n              bordered\r\n              pagination={false}\r\n            />\r\n            {/* <Tag color=\"red\">Selected options</Tag> */}\r\n            <br />\r\n           {JSON.stringify(state.selected)}\r\n            <br />\r\n            <Button onClick={onSubmit} type=\"primary\">\r\n              {\" \"}\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        );\r\n}\r\n\r\n    ","C:\\Users\\Saylah Hussain\\Documents\\GitHub\\cyf-final-project\\frontend\\src\\components\\StudentComponents\\StudentModulesBody.js",["119"],"import React,{useState} from 'react';\r\nimport {Route,Link} from 'react-router-dom';\r\nimport useFetch from '../../Auth/useFetch';\r\nimport Spinner from '../UI/Spinner';\r\nimport \"./StudentModulesBody.scss\";\r\n//import JavaScript from \"../../components/StudentComponents/Modules Components/JavaScript/JavaScript\";\r\n\r\n\r\n\r\n\r\nexport default function StudentModulesBody() {\r\n\r\n   let { status, data, error } = useFetch('http://localhost:3001/api/subjects');\r\n\r\n  if (status === 'error') {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (status === 'success') {\r\n    return <SubjectList data={data} />;\r\n  } else {\r\n    return <Spinner />;\r\n  }\r\n\r\n}\r\n  \r\nconst SubjectList = ({ data }) => {\r\n  const [subjects, setSubjects] = useState(data);\r\n\r\n  \r\n\r\n  return (\r\n    <div>\r\n      \r\n\r\n      <div className=\"row\">\r\n          {subjects.map(({ name }) => (\r\n            <div>\r\n              <div className=\"text-center modules\" key={name}>\r\n                <Link to={`/modules/${name}`}>\r\n                <h2 className=\"\">{name}</h2>\r\n                </Link>\r\n                \r\n            </div>\r\n             <Route path={`/modules/${name}`} component={name} />\r\n             </div>\r\n          ))\r\n          }\r\n      </div>\r\n     \r\n    </div>\r\n  );\r\n};\r\n",{"ruleId":"120","severity":1,"message":"121","line":3,"column":9,"nodeType":"122","messageId":"123","endLine":3,"endColumn":14},{"ruleId":"124","severity":1,"message":"125","line":45,"column":7,"nodeType":"126","endLine":45,"endColumn":20},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"120","severity":1,"message":"131","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":null,"fatal":true,"severity":2,"message":"132","line":1,"column":2},{"ruleId":"133","severity":1,"message":"134","line":60,"column":53,"nodeType":"135","messageId":"136","endLine":60,"endColumn":55},{"ruleId":"120","severity":1,"message":"137","line":23,"column":18,"nodeType":"122","messageId":"123","endLine":23,"endColumn":27},{"ruleId":"133","severity":1,"message":"134","line":56,"column":53,"nodeType":"135","messageId":"136","endLine":56,"endColumn":55},{"ruleId":"133","severity":1,"message":"134","line":64,"column":53,"nodeType":"135","messageId":"136","endLine":64,"endColumn":55},{"ruleId":"120","severity":1,"message":"138","line":26,"column":20,"nodeType":"122","messageId":"123","endLine":26,"endColumn":31},"no-unused-vars","'Class' is defined but never used.","Identifier","unusedVar","react/jsx-pascal-case","Imported JSX component Git_GitHub must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","no-native-reassign",["139"],"no-negated-in-lhs",["140"],"'Redirect' is defined but never used.","Parsing error: Unexpected token\n\n\u001b[0m\u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 1 | \u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<<\u001b[39m\u001b[33m<\u001b[39m \u001b[33mUpdated\u001b[39m upstream\u001b[0m\n\u001b[0m \u001b[90m   | \u001b[39m \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 2 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mReact\u001b[39m\u001b[33m,\u001b[39m {useState} from \u001b[32m'react'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 3 | \u001b[39m\u001b[33m===\u001b[39m\u001b[33m===\u001b[39m\u001b[33m=\u001b[39m\u001b[0m\n\u001b[0m \u001b[90m 4 | \u001b[39m\u001b[36mimport\u001b[39m \u001b[33mReact\u001b[39m \u001b[33m,\u001b[39m {useState}from \u001b[32m'react'\u001b[39m\u001b[33m;\u001b[39m\u001b[0m","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'setTopics' is assigned a value but never used.","'setSubjects' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]